{"config":{"lang":["en","zh"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#ulpatch-main-page","title":"ULPatch Main Page","text":""},{"location":"#ulpatch-description","title":"ULPatch Description","text":"<p>ULPatch is open source user space live patch tool, under GPL-2.0 or later license.</p>"},{"location":"#ulpatch-logo","title":"ULPatch Logo","text":"<p>I drew the ULPatch logo shown above using drawio. The meaning of this logo is obvious, the penguin means that ULPatch supports Linux, and he looks different from Linux Tux. And at the same time, you can see that the penguin is made up of patches and that he is alive.</p> <p>Tux, the official brand character of the Linux Kernel; by Larry Ewing (lewing@isc.tamu.edu) and The GIMP.</p> <p>The heart of a penguin is a CPU, which of course is closely related to the instruction set. This CPU icon is not made up of patches, I mean, ULPatch can only be applied to the user space, after all, the kernel space has a more complete livepatch mechanism.</p>"},{"location":"#background","title":"Background","text":"<p>For a process like Qemu that cannot be interrupted and restarted, vulnerability fixing is very difficult. Especially for cloud vendors, the live patch is very important.</p> <p>Of course, the ULPatch project only discusses user-mode programs.</p>"},{"location":"#ulpatch-support-architecture","title":"ULPatch Support Architecture","text":"<p>Due to my limited personal experience, I can't understand and master all the architectures, here is a list of the architectures that I am familiar with and I want to support, if they do not contain what you need, you are welcome to co-develop.</p> <ul> <li> <code>x86_64</code>: ready to go, support some simple demostration already.</li> <li> <code>aarch64</code>: ready to go, support some simple demostration already.</li> <li> <code>loongarch64</code>: not support yet.</li> <li> <code>riscv64</code>: not support yet.</li> </ul>"},{"location":"#related-projects","title":"Related Projects","text":"<p>ULPatch draws on several excellent open source projects, such as cloudlinux/libcare, and Huawei\u2019s secondary development openeuler/libcareplus. SUSE has also open sourced its own live patch solution SUSE/libpulp.</p> <p>Hot patching in the kernel is already a relatively mature technology. Implementing livepatch based on ftrace in the linux kernel.</p> <p>There are also some enterprise-level software. QEMUCare can automatically patch your QEMU-based virtualization systems while they're running, without needing to shut down or migrate the virtualization layer or reboot. KernelCare SimplePatch is a kernel live patching product that provides security patches for a range of popular Linux kernels that can be installed without rebooting the system.</p> <p>At the same time, the implementation of the kernel's <code>finit_module(2)</code> and <code>init_module(2)</code> system calls is also of great reference value. Even in the early stages of ULPatch development, the relocation code was transplanted from these two system calls.</p> <p>Judging from the current research on outstanding projects, the live patch function relies on modifying the assembly instructions at the function entrance to make it jump to a new function.</p> <p>I think I should detail the inspiration of ULPatch from these open source projects in another document instead of a README file.</p>"},{"location":"#authors-monologue","title":"Author's Monologue","text":"<p>I don't want to get involved in the License wars, so please forgive me if the project misquote open source code. After all, this is not a commercial project.</p> <p>My native language is Chinese, not English, so please excuse my poor English grammar.</p> <p>I drew all logo/svg shown in ULPatch using drawio.</p> <p>I'm a Linux Newbie, little student.</p>"},{"location":"#links","title":"Links","text":"<ul> <li>GitHub RToax ULPatch<ul> <li>GitHub ULPatch</li> </ul> </li> <li>ULPatch Documents / zh</li> </ul>"},{"location":"CHANGELOG/","title":"Changelog","text":"<p>All notable changes to this project will be documented in this file.</p> <p>The format is based on Keep a Changelog, and this project adheres to Semantic Versioning.</p> <p>Don't forget to modify Chinese version CHANGELOG.md at the same time.</p>"},{"location":"CHANGELOG/#unreleased","title":"Unreleased","text":""},{"location":"CHANGELOG/#breaking-changes","title":"Breaking Changes","text":""},{"location":"CHANGELOG/#added","title":"Added","text":""},{"location":"CHANGELOG/#changed","title":"Changed","text":""},{"location":"CHANGELOG/#deprecated","title":"Deprecated","text":""},{"location":"CHANGELOG/#removed","title":"Removed","text":"<ul> <li>Remove tests/plt.</li> </ul>"},{"location":"CHANGELOG/#fixed","title":"Fixed","text":""},{"location":"CHANGELOG/#security","title":"Security","text":""},{"location":"CHANGELOG/#docs","title":"Docs","text":""},{"location":"CHANGELOG/#tools","title":"Tools","text":""},{"location":"CHANGELOG/#tests","title":"Tests","text":""},{"location":"CHANGELOG/#v0514-2025-05-25","title":"[v0.5.14] 2025-05-25","text":""},{"location":"CHANGELOG/#breaking-changes_1","title":"Breaking Changes","text":"<ul> <li>Add <code>ULPATCH_LICENSE()</code> and <code>ULPATCH_FILE_VERSION=5</code>.</li> </ul>"},{"location":"CHANGELOG/#added_1","title":"Added","text":"<ul> <li>tests: Add engine directory.</li> <li>Add ulpconfig.mk.</li> <li>scripts: add verbose.mk.</li> <li>docker: Add build.sh.</li> <li>Ready to use cmake compile tests/hello.</li> <li>Add git as depends.</li> </ul>"},{"location":"CHANGELOG/#changed_1","title":"Changed","text":"<ul> <li>task: split seperate source file from core.c.</li> <li>utils: split seperate header file from util.h.</li> <li>tests: Rename tests/disasm/disasm-tst1.c to tests/bfd/symbol.c.</li> <li>tests: Introduce linker scripts to iterate all tests.</li> <li>tests: Use linker scripts instead of <code>TEST_STUB()</code>.</li> </ul>"},{"location":"CHANGELOG/#deprecated_1","title":"Deprecated","text":""},{"location":"CHANGELOG/#removed_1","title":"Removed","text":"<ul> <li>Remove tests/disasm/disasm-tst0.c.</li> </ul>"},{"location":"CHANGELOG/#fixed_1","title":"Fixed","text":"<ul> <li>Fix tests/disasm/ compile error.</li> <li>Pass <code>task_attach()</code> return value to caller.</li> </ul>"},{"location":"CHANGELOG/#security_1","title":"Security","text":""},{"location":"CHANGELOG/#docs_1","title":"Docs","text":""},{"location":"CHANGELOG/#tools_1","title":"Tools","text":""},{"location":"CHANGELOG/#tests_1","title":"Tests","text":"<ul> <li>Only tests ultask and ulftrace if built.</li> <li>Add tests/bfd to CMake list.</li> </ul>"},{"location":"CHANGELOG/#v0513","title":"v0.5.13","text":""},{"location":"CHANGELOG/#breaking-changes_2","title":"Breaking Changes","text":"<ul> <li>Add <code>ULPATCH_AUTHOR()</code> and <code>ULPATCH_FILE_VERSION=4</code>.</li> </ul>"},{"location":"CHANGELOG/#added_2","title":"Added","text":"<ul> <li>Add scripts/modify-return.sh to modify function return value to false.</li> <li>Add CMake macro <code>CONFIG_OPENSSL</code></li> <li>Add OpenSSL depends and add fmd5sum() function.</li> <li>Add header file /usr/include/ulpatch/version.h.</li> <li>rpmbuild.sh add --nocheck argument.</li> <li>task: Add C macro <code>task_vdso_vma(task)</code></li> <li>ultask: support --dump vdso.</li> </ul>"},{"location":"CHANGELOG/#changed_2","title":"Changed","text":"<ul> <li>Rename src/ulconfig to src/ulpconfig.sh.in</li> </ul>"},{"location":"CHANGELOG/#deprecated_2","title":"Deprecated","text":""},{"location":"CHANGELOG/#removed_2","title":"Removed","text":""},{"location":"CHANGELOG/#fixed_2","title":"Fixed","text":""},{"location":"CHANGELOG/#security_2","title":"Security","text":""},{"location":"CHANGELOG/#docs_2","title":"Docs","text":"<ul> <li>Add CHANGELOG.md</li> <li>Manual add copyright comment.</li> </ul>"},{"location":"CHANGELOG/#tools_2","title":"Tools","text":""},{"location":"CONTRIBUTING/","title":"Contributing","text":""},{"location":"CONTRIBUTING/#ulpatch-contributing-guidelines","title":"ULPatch Contributing Guidelines","text":"<p>Contributions are welcome, and they are greatly appreciated! Every little bit helps, and credit will always be given.</p>"},{"location":"CONTRIBUTING/#report-bugs","title":"Report Bugs","text":"<p>Report bugs at https://github.com/Rtoax/ulpatch/issues</p> <p>If you are reporting a bug, please include:</p> <ul> <li>Your operating system name and version.</li> <li>If your OS is customized by youself, please list <code>glibc</code>, <code>kernel</code>, <code>binutils</code>, <code>elfutils</code>, etc. versions.</li> <li>Any details about your local setup that might be helpful in troubleshooting.</li> <li>Detailed steps to reproduce the bug.</li> </ul>"},{"location":"CONTRIBUTING/#fix-bugs","title":"Fix Bugs","text":"<p>Look through the GitHub issues for bugs. Anything tagged with \"bug\" and \"help wanted\" is open to whoever wants to implement it.</p>"},{"location":"CONTRIBUTING/#implement-features","title":"Implement Features","text":"<p>Look through the GitHub issues for features. Anything tagged with \"enhancement\" and \"help wanted\" is open to whoever wants to implement it.</p>"},{"location":"CONTRIBUTING/#write-documentation","title":"Write Documentation","text":"<p>ULPatch could always use more documentation, whether as part of the official ULPatch docs, in docstrings, or even on the web in blog posts, articles, and such.</p>"},{"location":"CONTRIBUTING/#submit-feedback","title":"Submit Feedback","text":"<p>The best way to send feedback is to fill an issue at https://github.com/Rtoax/ulpatch/issues.</p> <p>If you are proposing a feature:</p> <ul> <li>Explain in detail how it would work.</li> <li>Keep the scope as narrow as possible, to make it easier to implement.</li> <li>Remember that this is a volunteer-driven project, and that contributions are welcome :)</li> </ul>"},{"location":"CONTRIBUTING/#ulpatch-politics","title":"ULPatch Politics","text":"<p>Recently, Several Russian developers lose kernel maintainership status, Greg Kroah-Hartman Remove some entries due to various compliance requirements.</p> <p>I hope ULPatch will never get involved in political issues, and I love China, My Homeland.</p>"},{"location":"INSTALL/","title":"Installation","text":""},{"location":"INSTALL/#from-source-code","title":"From Source Code","text":""},{"location":"INSTALL/#install-dependences","title":"Install Dependences","text":""},{"location":"INSTALL/#fedorarhelalmalinux","title":"Fedora/RHEL/AlmaLinux","text":"<p>On RHEL like linux distrobution, manage packages with rpm and dnf/yum.</p> <pre><code># Some distributions like RHEL need epel-release package, Fedora don't.\n$ sudo dnf install -y epel-release\n$ sudo dnf group install -y development-tools\n$ sudo dnf install -y \\\n    bash-completion-devel \\\n    binutils-devel \\\n    capstone-devel \\\n    cmake \\\n    elfutils-devel \\\n    elfutils-libelf-devel \\\n    gcc \\\n    gcc-c++ \\\n    git \\\n    glibc-devel \\\n    libunwind-devel \\\n    openssl-devel \\\n    util-linux\n</code></pre>"},{"location":"INSTALL/#debianubuntu","title":"Debian/Ubuntu","text":"<p>On Debian like linux distrobutions, manage packages with dpkg and apt.</p> <pre><code>$ sudo apt install -y build-essential\n$ sudo apt install -y \\\n    bash-completion \\\n    binutils-dev \\\n    cmake \\\n    gcc \\\n    git \\\n    libc6 \\\n    libcapstone-dev \\\n    libelf-dev \\\n    libssl-dev \\\n    libunwind-dev \\\n    util-linux\n</code></pre> <p>If you want to compile the website, install</p> <pre><code>$ sudo apt install -y mkdocs\n</code></pre> <p>Then, you could run <code>mkdocs build</code> on git-root directory, after that, running <code>mkdocs serve</code> to access local website http://127.0.0.1:8000/ulpatch/.</p>"},{"location":"INSTALL/#compile","title":"Compile","text":"<pre><code>$ git clone https://github.com/rtoax/ulpatch\n$ cd ulpatch\n$ mkdir build\n$ cd build\n$ cmake -DCMAKE_INSTALL_PREFIX=/usr \\\n    -DCONFIG_BUILD_TESTING=OFF \\\n    -DCONFIG_BUILD_ULFTRACE=OFF \\\n    -DCONFIG_BUILD_ULTASK=OFF \\\n    ..\n$ make -j$(nproc)\n</code></pre> <p>Or you could specify <code>-B build</code> argument of cmake, like <code>cmake -B build -DCMAKE_BUILD_TYPE=Release</code>. If you want to see the compile detail, use <code>make VERBOSE=1</code>.</p> <p>Default use <code>gcc</code>, if want to use <code>clang</code>, you could specify <code>-DCMAKE_C_COMPILER=clang</code> argument of cmake.</p>"},{"location":"INSTALL/#cmake-macros","title":"CMake Macros","text":""},{"location":"INSTALL/#cmake_build_type","title":"CMAKE_BUILD_TYPE","text":"<p>You can specify CMake Build type with <code>CMAKE_BUILD_TYPE</code>, such as <code>-DCMAKE_BUILD_TYPE=Debug</code>(<code>Release</code>,<code>Debug</code>,<code>RelWithDebInfo</code>,<code>MinSizeRel</code>), such as:</p> <pre><code>$ cmake -DCMAKE_BUILD_TYPE=Debug ..\n</code></pre> <p>Default is <code>Debug</code>.</p>"},{"location":"INSTALL/#config_build_pie_exe","title":"CONFIG_BUILD_PIE_EXE","text":"<p>Build all executions as PIE(<code>Position-Independent-Executable</code>), such as:</p> <pre><code>$ cmake -DCONFIG_BUILD_PIE_EXE=1 ..\n</code></pre> <p>This cmake option is helpful if you want to test the PIE elf.</p>"},{"location":"INSTALL/#config_build_testing","title":"CONFIG_BUILD_TESTING","text":"<p>You can specify <code>CONFIG_BUILD_TESTING</code> to determine compile <code>ulpatch_test</code> or not, default <code>ON</code>. If you want to turn it off, such as:</p> <pre><code>$ cmake -DCONFIG_BUILD_TESTING=0 ..\n</code></pre>"},{"location":"INSTALL/#config_build_ulftrace","title":"CONFIG_BUILD_ULFTRACE","text":"<p>You can specify <code>CONFIG_BUILD_ULFTRACE</code> to determine compile <code>ulftrace</code> or not, default <code>ON</code>. If you want to turn it off, such as:</p> <pre><code>$ cmake -DCONFIG_BUILD_ULFTRACE=0 ..\n</code></pre>"},{"location":"INSTALL/#config_build_ultask","title":"CONFIG_BUILD_ULTASK","text":"<p>You can specify <code>CONFIG_BUILD_ULTASK</code> to determine compile <code>ultask</code> or not, default <code>ON</code>. If you want to turn it off, such as:</p> <pre><code>$ cmake -DCONFIG_BUILD_ULTASK=0 ..\n</code></pre>"},{"location":"INSTALL/#config_build_man","title":"CONFIG_BUILD_MAN","text":"<p>You can specify <code>CONFIG_BUILD_MAN</code> to determine compile manual pages of ULPatch or not, default <code>ON</code>. If you want to turn it off, such as:</p> <pre><code>$ cmake -DCONFIG_BUILD_MAN=0 ..\n</code></pre>"},{"location":"INSTALL/#config_build_bash_completions","title":"CONFIG_BUILD_BASH_COMPLETIONS","text":"<p>You can specify <code>CONFIG_BUILD_BASH_COMPLETIONS</code> to determine install bash completions of ULPatch or not, default <code>ON</code>. If you want to turn it off, such as:</p> <pre><code>$ cmake -DCONFIG_BUILD_BASH_COMPLETIONS=0 ..\n</code></pre>"},{"location":"INSTALL/#config_capstone","title":"CONFIG_CAPSTONE","text":"<p>CMake <code>CONFIG_CAPSTONE</code> determine compile with capstone or not, default <code>ON</code>. If you want to turn it off, such as:</p> <pre><code>$ cmake -DCONFIG_CAPSTONE=OFF ..\n</code></pre>"},{"location":"INSTALL/#config_openssl","title":"CONFIG_OPENSSL","text":"<p>CMake <code>CONFIG_OPENSSL</code> determine compile with openssl or not, default <code>ON</code>. If you want to turn it off, such as:</p> <pre><code>$ cmake -DCONFIG_OPENSSL=OFF ..\n</code></pre>"},{"location":"INSTALL/#config_libunwind","title":"CONFIG_LIBUNWIND","text":"<p>CMake <code>CONFIG_LIBUNWIND</code> determine compile with libunwind or not, default <code>ON</code>. If you want to turn it off, such as:</p> <pre><code>$ cmake -DCONFIG_LIBUNWIND=OFF ..\n</code></pre> <p>If <code>CONFIG_LIBUNWIND=ON(default)</code>, and your system donesn's have it, <code>cmake</code> will run fatal and tell you.</p>"},{"location":"INSTALL/#install","title":"Install","text":"<pre><code>$ sudo make install\n</code></pre>"},{"location":"INSTALL/#uninstall","title":"Uninstall","text":"<pre><code>$ sudo make uninstall\n</code></pre>"},{"location":"INSTALL/#from-rpm-package","title":"From RPM Package","text":""},{"location":"INSTALL/#download","title":"Download","text":"<p>Download rpm packages from Release page.</p>"},{"location":"INSTALL/#install_1","title":"Install","text":"<p>Then, use <code>rpm</code> or <code>dnf</code> command to install the rpm packages.</p> <pre><code>$ sudo dnf install ulpatch-*.rpm\n</code></pre> <p>Use 'localinstall' is better(dnf &lt;= 4, dnf5 not support 'localinstall' anymore).</p> <p>Or</p> <pre><code>$ sudo rpm -ivh ulpatch-*.rpm\n</code></pre> <p>If upgrade:</p> <pre><code>$ sudo rpm -iUh ulpatch-*.rpm\n</code></pre>"},{"location":"INSTALL/#build-rpm-packages-your-own","title":"Build RPM Packages Your Own","text":"<p>Only support rpm management software system, such as Fedora, RHEL and its derivatives.</p> <p>You need to install the rpm-build depends package.</p> <pre><code>$ sudo dnf install rpm-build\n</code></pre> <p>Then, install the depends of ulpatch according to spec:</p> <pre><code># Or sudo dnf install -y dnf-plugins-core\n$ sudo dnf install -y 'dnf-command(builddep)'\n$ sudo dnf builddep -y ulpatch.spec\n</code></pre> <p>Now, you can compile with rpmbuild. In the root directory of this project, I have written an rpmbuild(<code>rpmbuild.sh</code>) example for you. And of course, you need to archive the source code to tar package.</p> <p>Generate tar archive:</p> <pre><code>$ ./archive.sh\n</code></pre> <p>Build the RPM packages:</p> <pre><code>$ ./rpmbuild.sh\n</code></pre>"},{"location":"INSTALL/#done-to-install","title":"Done to Install","text":"<p>Then, enjoy it.</p>"},{"location":"RELEASE/","title":"Releases","text":""},{"location":"RELEASE/#ulpatch-releases","title":"ULPatch Releases","text":"<p>Not release yet, don't use.</p> <p>I think this would be a good solution for userspace livepatch, but I don't really have much time for development, so take your time, bro.</p> <p>The command line names and their parameters may be modified before the official release.</p>"},{"location":"RELEASE/#links","title":"Links","text":"<ul> <li>ULPatch Releases</li> </ul>"},{"location":"THEORY/","title":"Theory","text":""},{"location":"THEORY/#theroy","title":"Theroy","text":"<p>This page only introduce theroy of ULPatch, but not the implementation details.</p> <p>All programs are single-threaded models, so you will not see synchronization locks in the code. Of course, we need to consider the multi-threaded situation of the target process.</p>"},{"location":"THEORY/#ulpatch","title":"ULPatch","text":""},{"location":"THEORY/#patch","title":"Patch","text":"<p>The following figure shows the livepatch loading procedures.</p> <p></p> <p>The detailed steps are as follows:</p> <ol> <li>Compile source code into a relocatable ELF file, it's livepatch file;</li> <li>Load the relocatable ELF file into the target process address space;</li> <li>Relocate the symbols in the patch according to the target process address symbol table;</li> <li>Modify the patch function entry to jump to the patch function;</li> </ol> <p>The start instruction of the objective function will be replaced with the jump instruction that jumps to the patch function, as shown in the following figure:</p> <p></p>"},{"location":"THEORY/#unpatch","title":"Unpatch","text":"<p>The following figure shows the uninstall procedures of the livepatch.</p> <p></p> <p>The <code>unpatch</code> operation is the reverse operation of <code>patch</code>, but without the relocate process.</p>"},{"location":"THEORY/#ultask","title":"ULTask","text":"<p>It's an useful tool to modify target process, I call it Program Modifier. <code>CONFIG_BUILD_ULTASK</code> decides whether to compile <code>ultask</code>. Check manual <code>ultask(8)</code> to see more.</p> <p>ULTask uses the <code>/proc/</code> file system to modify and view the target process. For example, read or modify the target process memory via <code>/proc/PID/mem</code>.</p> <p>TODO</p>"},{"location":"THEORY/#ulftrace","title":"ULFtrace","text":"<p>Same as linux ftrace, need gcc <code>-pg</code> compile option. <code>CONFIG_BUILD_ULFTRACE</code> decides whether to compile <code>ulftrace</code>. Check manual <code>ulftrace(8)</code> to see more.</p> <p>TODO</p>"},{"location":"TODO/","title":"TODO","text":""},{"location":"TODO/#todo-lists","title":"TODO-Lists","text":""},{"location":"TODO/#now","title":"Now","text":"<ul> <li>Support load symbol-file like gdb.</li> <li>Some symbols will be optimized out.</li> <li>support Qemu</li> <li>support multi-thread and make each thread safety, use ptrace(2).</li> <li>Add ulpatches that already patched symbols to task symbols.</li> <li>Support uninitialized variable yet, see <code>.bss</code> <code>SHT_NOBITS</code></li> <li>ULPatch VMA better isn't file map</li> <li>Relocation entry out of address space range.</li> <li>See the kernel patch set arm64: module: improve module VA range selection</li> </ul>"},{"location":"TODO/#further","title":"Further","text":"<ul> <li>Support dynamic library live patch.</li> <li>Support static executable ELF (no need to any dynamic libraries).</li> <li>Support sign and check.</li> <li>How to patch to strip ELF process.</li> <li>loongarch64 support.</li> <li>GUI support, like GTK/Qt, etc.</li> <li>Like kernel module has <code>module_init</code> and <code>module_exit</code>, ULPatch should has too, if create thread and thread callback is in ULP vma, during unpatch, segvfault will be triggered.</li> <li>Maybe we could use dlopen/dlsym to map ulpatch file.</li> <li>Support C++.</li> </ul>"},{"location":"TODO/#no-support-ideal-is-plump-reality-is-bony","title":"No support (ideal is plump, reality is bony)","text":"<ul> <li>Anon vma for each patch and use prctl(2)(<code>CONFIG_ANON_VMA_NAME</code>) set vma's name, and I try to submit kernel patch, but David Hildenbrand don't like it, see LKML Link</li> </ul>"},{"location":"code-style/","title":"Code Style","text":""},{"location":"code-style/#coding-style","title":"Coding Style","text":"<p>Please refer to Linux kernel coding style for the coding style of C language. There may be some differences in specific Linux kernel versions, such as Linux 4.19, but overall it won't change much.</p> <p>You could use <code>indent</code> modify your source code:</p> <pre><code># Output to stdout\n$ indent --linux-style -st main.c\n# Or override main.c\n$ indent --linux-style main.c\n</code></pre>"},{"location":"code-style/#vim-config","title":"VIM Config","text":"<p>The basic configuration of the <code>.vimrc</code> file is as follows:</p> <pre><code>set tabstop=8\nset softtabstop=8\nset shiftwidth=8\nset cc=80\n</code></pre>"},{"location":"code-style/#code-file-format","title":"Code File Format","text":"<p>ULPatch use Unix format not DOS or Mac format.</p> <p>As you can see from manual of <code>dos2unix(1)</code></p> <p>In DOS/Windows text files a line break, also known as newline, is a combination of two characters: a Carriage Return (CR) followed by a Line Feed (LF). In Unix text files a line break is a single character: the Line Feed (LF). In Mac text files, prior to Mac OS X, a line break was single Carriage Return (CR) character. Nowadays Mac OS uses Unix style (LF) line breaks.</p> <p>You may often see the special character <code>^M</code> under Unix like system if code is DOS or Mac format.</p>"},{"location":"code-style/#programming-standards","title":"Programming Standards","text":"<ul> <li>Never use <code>%s</code>+<code>strerror(errno)</code> display string describing error number in log, use <code>%m</code> instead.</li> <li>Remember, set <code>errno</code> in ULPatch functions if necessary.</li> </ul>"},{"location":"code-style/#documents-standards","title":"Documents Standards","text":"<ul> <li>Modify Chinese and English documents simultaneously;</li> <li>English words in Chinese documents need to be separated from Chinese words by space;</li> </ul>"},{"location":"data-structure/","title":"Data Structure","text":""},{"location":"data-structure/#basic-data-structures","title":"Basic Data Structures","text":""},{"location":"data-structure/#double-link-list","title":"Double Link List","text":"<p>See https://github.com/torvalds/linux::list.h.</p>"},{"location":"data-structure/#red-black-tree","title":"Red Black Tree","text":"<p>See https://github.com/torvalds/linux::rbtree.h.</p>"},{"location":"data-structure/#ulpatch-data-structures","title":"ULPatch Data Structures","text":""},{"location":"data-structure/#tasks-vmas","title":"task's vmas","text":"<p>TODO</p>"},{"location":"developers/","title":"Developer","text":""},{"location":"developers/#ulpatch-development-guide","title":"ULPatch Development Guide","text":"<p>This document features basic guidelines and recommendations on how to do ulpatch development. Please read it carefully before submitting patches to simplify reviewing and to speed up the merge process.</p>"},{"location":"developers/#background","title":"Background","text":"<p>In my opinion, if you want to develop and participate in the development of this project together, the following knowledge points need to be understood in advance:</p> <ul> <li>Linux Basics;</li> <li>ELF format;</li> <li>ELF relocation;</li> <li>How Linux kernel runs an ELF executable;</li> <li>How GNU linker works;</li> </ul>"},{"location":"developers/#precautions","title":"Precautions","text":"<p>You can view unfinished development tasks in TODO-List, and you need to obey the Coding Style and Contributing rules.</p>"},{"location":"developers/#cmake-compile-macros","title":"CMake Compile Macros","text":"<p>see INSTALL.</p>"},{"location":"developers/#c-macros","title":"C Macros","text":""},{"location":"developers/#current","title":"current","text":"<p>Like kernel macro <code>current</code>, this <code>current</code> indicates the currently opened remote process.</p>"},{"location":"developers/#c-functions","title":"C Functions","text":"<p>ULpatch functions set <code>errno</code> for bad situation.</p>"},{"location":"developers/#github-ci","title":"GitHub CI","text":"<p>Check ulpatch/.github.</p>"},{"location":"elf/","title":"Elf","text":""},{"location":"elf/#elf-executable-and-linkable-format","title":"ELF: Executable and Linkable Format","text":"<p>The ELF is a common standard file format for executable files, object code, shared libraries, and core dumps. First published in the specification for the application binary interface (ABI) of the Unix operating system version named System V Release 4 (SVR4), and later in the Tool Interface Standard, it was quickly accepted among different vendors of Unix systems. In 1999, it was chosen as the standard binary file format for Unix and Unix-like systems on x86 processors by the 86open project.</p> <p>By design, the ELF format is flexible, extensible, and cross-platform. For instance, it supports different endiannesses and address sizes so it does not exclude any particular CPU or instruction set architecture. This has allowed it to be adopted by many different operating systems on many different hardware platforms.</p> <p></p>"},{"location":"elf/#ulpatch-elf-format","title":"ULPatch ELF Format","text":"<p>TODO</p>"},{"location":"log/","title":"Log","text":""},{"location":"log/#log-level","title":"Log Level","text":"<p>See syslog(2) manual or file <code>/usr/include/sys/syslog.h</code>.</p>"},{"location":"log/#syslog","title":"Syslog","text":"<p>The important logs will be recorded in to system log. If your system use <code>systemd</code> as service manager, you can use <code>journalctl</code>.</p>"},{"location":"log/#ulpatch","title":"ULPatch","text":"<p>Each ULPatch command has <code>--log-level[=LEVEL], --lv[=LEVEL]</code>, <code>--log-debug</code> and <code>--log-error</code> arguments, use to specify log level. The log level number obey <code>/usr/include/sys/syslog.h</code> rules. And you could use <code>-v, --verbose</code> argument to see more informations.</p>"},{"location":"relocations/","title":"Relocations","text":""},{"location":"relocations/#elf-relocations","title":"ELF Relocations","text":"<p>Relocation is the process of connecting symbolic references with symbolic definitions. For example, when a program calls a function, the associated call instruction must transfer control to the proper destination address at execution.</p> <p>Relocatable files must have <code>relocation entries</code> which are necessary because they contain information that describes how to modify their section contents, thus allowing executable and shared object files to hold the right information for a process's program image.</p> <pre><code>typedef struct {\n    Elf32_Addr  r_offset;\n    Elf32_Word  r_info;\n} Elf32_Rel;\n\ntypedef struct {\n    Elf32_Addr  r_offset;\n    Elf32_Word  r_info;\n    Elf32_Sword r_addend;\n} Elf32_Rela;\n\ntypedef struct {\n    Elf64_Addr  r_offset;\n    Elf64_Xword r_info;\n} Elf64_Rel;\n\ntypedef struct {\n    Elf64_Addr  r_offset;\n    Elf64_Xword r_info;\n    Elf64_Sxword    r_addend;\n} Elf64_Rela;\n</code></pre>"},{"location":"relocations/#dynamic-relocations","title":"Dynamic Relocations","text":"<p>TODO</p>"},{"location":"relocations/#live-process-relocation","title":"Live Process Relocation","text":"<p>TODO</p>"},{"location":"relocations/#pie-relocation","title":"PIE Relocation","text":"<p>PIE: Position-Independent-Executable</p> <p>TODO</p>"},{"location":"relocations/#links","title":"Links","text":"<ul> <li>GitHub: Application Binary Interface for the Arm\u00ae Architecture<ul> <li>aarch64 ELF64</li> </ul> </li> <li>https://refspecs.linuxbase.org/: Relocation</li> <li>Relocations: fantastic symbols, but where to find them?</li> <li>PDF: ELF for the ARM\u00ae 64-bit Architecture (AArch64)</li> <li>wikipedia: https://en.wikipedia.org/wiki/Relocation_(computing)</li> </ul>"},{"location":"symbol-value/","title":"Symbol Value","text":""},{"location":"symbol-value/#abbreviations","title":"Abbreviations","text":"<ul> <li>PIE: Position-Independent-Executable</li> </ul>"},{"location":"symbol-value/#introductions","title":"Introductions","text":"<p>How to resolve symbol addresses?</p> <p>GDB's implementation of symbol parsing, binutils-gdb is helpful, we should use <code>BFD</code> for resolve symbols and relocations.</p>"},{"location":"symbol-value/#linux-kernel-elf-file-map","title":"Linux Kernel ELF File Map","text":"<p>See kernel <code>load_elf_binary()</code> function, it will load all <code>PT_LOAD</code> section to memory, the location is what we care about.</p> <pre><code>load_bias = 0\nvaddr = elf_ppnt-&gt;p_vaddr\nif (ET_EXEC)\nelif (ET_DYN)\n    load_bias = Non-Zero Value (random)\n\nelf_map(file, load_bias + vaddr, ...) {\n    size = p_filesz + ELF_PAGEOFFSET(p_vaddr);\n    off = p_offset - ELF_PAGEOFFSET(p_vaddr);\n    addr = load_bias + p_vaddr\n    addr = ELF_PAGESTART(addr);\n    size = ELF_PAGEALIGN(size);\n    vm_mmap(filep, addr, size, ..., off);\n}\n</code></pre>"},{"location":"symbol-value/#processs-vmas","title":"Process's VMAs","text":"<p>In <code>/proc/PID/maps</code>, we could see the process's VMAs, kernel will load <code>PT_LOAD</code> into memory, and <code>linker</code>(for example <code>/lib64/ld-linux-x86-64.so.2</code> on <code>x86_64</code> fedora40) will seperate some vma. for example:</p> <p>non-PIE hello's <code>PT_LOAD</code></p> <pre><code>Program Headers:\n  Type           Offset             VirtAddr           PhysAddr\n                 FileSiz            MemSiz              Flags  Align\n  LOAD           0x0000000000000000 0x0000000000400000 0x0000000000400000\n                 0x0000000000000650 0x0000000000000650  R      0x1000\n  LOAD           0x0000000000001000 0x0000000000401000 0x0000000000401000\n                 0x0000000000000379 0x0000000000000379  R E    0x1000\n  LOAD           0x0000000000002000 0x0000000000402000 0x0000000000402000\n                 0x00000000000001d4 0x00000000000001d4  R      0x1000\n  LOAD           0x0000000000002df8 0x0000000000403df8 0x0000000000403df8\n                 0x0000000000000248 0x0000000000000260  RW     0x1000\n</code></pre> <p>we just start the <code>hello</code> with gdb, and <code>break</code> on linker's <code>_dl_start()</code>:</p> <pre><code>$ gdb ./hello\n(gdb) b _dl_start\n(gdb) r\nBreakpoint 1, _dl_start (arg=0x7fffffffd830) at rtld.c:517\n517 {\n</code></pre> <p>Then, check VMAs:</p> <pre><code>$ cat /proc/$(pidof hello)/maps\n00400000-00401000 r--p 00000000 08:10 3115204 /ulpatch/tests/hello/hello\n00401000-00402000 r-xp 00001000 08:10 3115204 /ulpatch/tests/hello/hello\n00402000-00403000 r--p 00002000 08:10 3115204 /ulpatch/tests/hello/hello\n00403000-00405000 rw-p 00002000 08:10 3115204 /ulpatch/tests/hello/hello\n</code></pre> <p>Then, <code>continue</code> run process:</p> <pre><code>(gdb) continue\n</code></pre> <p>Check VMAs again:</p> <pre><code>$ cat /proc/$(pidof hello)/maps\n00400000-00401000 r--p 00000000 08:10 3115204 /ulpatch/tests/hello/hello\n00401000-00402000 r-xp 00001000 08:10 3115204 /ulpatch/tests/hello/hello\n00402000-00403000 r--p 00002000 08:10 3115204 /ulpatch/tests/hello/hello\n00403000-00404000 r--p 00002000 08:10 3115204 /ulpatch/tests/hello/hello\n00404000-00405000 rw-p 00003000 08:10 3115204 /ulpatch/tests/hello/hello\n</code></pre> <p>Why linker split vma <code>00403000-00405000 rw-p 00002000</code> to two different vmas <code>00403000-00404000 r--p 00002000</code> and <code>00404000-00405000 rw-p 00003000</code>? Let's see the linker's call stack in glibc source code(my version <code>glibc-2.40.9000-13-g22958014ab</code>).</p> <pre><code>_dl_start() {\n  _dl_start_final() {\n    _dl_sysdep_start() {\n      dl_main(dl_main_args.phdr, dl_main_args.phnum, ...) {\n        _dl_relocate_object() {\n          _dl_protect_relro() {\n            phdr = PT_GNU_RELRO\n            start = PAGE_DOWN(load_bias + phdr-&gt;p_vaddr);\n            end = PAGE_DOWN(load_bias + phdr-&gt;p_vaddr + phdr-&gt;p_memsz);\n            if (start != end) {\n              mprotect(start, end - start, PROT_READ);\n            }\n          }\n        }\n      }\n    }\n  }\n}\n</code></pre> <p>Let's see the PIE program.</p> <pre><code>555555554000-555555555000 r--p 00000000 08:10 3115207 /ulpatch/tests/hello/hello-pie\n555555555000-555555556000 r-xp 00001000 08:10 3115207 /ulpatch/tests/hello/hello-pie\n555555556000-555555557000 r--p 00002000 08:10 3115207 /ulpatch/tests/hello/hello-pie\n555555557000-555555559000 rw-p 00002000 08:10 3115207 /ulpatch/tests/hello/hello-pie\n</code></pre> <p>Tracing <code>mprotect(2)</code>:</p> <pre><code>mprotect(0x555555557000, 0x4096, PROT_READ);\n</code></pre> <pre><code>555555554000-555555555000 r--p 00000000 08:10 3115207 /ulpatch/tests/hello/hello-pie\n555555555000-555555556000 r-xp 00001000 08:10 3115207 /ulpatch/tests/hello/hello-pie\n555555556000-555555557000 r--p 00002000 08:10 3115207 /ulpatch/tests/hello/hello-pie\n555555557000-555555558000 r--p 00002000 08:10 3115207 /ulpatch/tests/hello/hello-pie\n555555558000-555555559000 rw-p 00003000 08:10 3115207 /ulpatch/tests/hello/hello-pie\n</code></pre> <p>We should know why linker modify <code>addr=0x555555557000,len=0x4096</code> memory to readonly.</p> <p>As we can see in <code>readelf -l /bin/bash</code> output, the <code>.data.rel.ro</code> in the last <code>PT_LOAD</code> program header and <code>PT_GNU_RELRO</code> program header, kernel will load all <code>PT_LOAD</code> into memory, then, GNU Linker will set the <code>.data.rel.ro</code> to readonly permission by <code>mprotect(2)</code> syscall, see the linker pseudocode show above. Thus, the vma <code>555555557000-555555559000 rw-p 00002000</code> will splited to two different vma <code>555555557000-555555558000 r--p 00002000</code> and <code>555555558000-555555559000 rw-p 00003000</code>.</p>"},{"location":"symbol-value/#links","title":"Links","text":"<ul> <li>https://reverseengineering.stackexchange.com/questions/16036/how-can-i-view-the-dynamic-symbol-table-of-a-running-process</li> <li>https://jvns.ca/blog/2018/01/09/resolving-symbol-addresses/</li> <li>How gdb loads symbol files</li> <li>GitHub: bpftrace</li> </ul>"},{"location":"ulpatch/","title":"ULPatch","text":""},{"location":"ulpatch/#ulpatch-introduction","title":"ULPatch Introduction","text":"<p>You could see the theory first, and man ulpatch is also helpful.</p>"},{"location":"ulpatch/#common-arguments","title":"Common Arguments","text":"<p>The <code>--pid</code> parameter must be specified, passing in a valid process PID. <code>--log-level|--lv=debug,dbg,info,inf,notice,note,warning,warn,error,err,crit,alert,emerg</code> to set log level.</p>"},{"location":"ulpatch/#make-a-ulpatch","title":"Make a ULPatch","text":"<p>TODO</p>"},{"location":"ulpatch/#apply-a-ulpatch","title":"Apply a ULPatch","text":"<p>TODO</p>"},{"location":"ulpatch/#unpatch-a-ulpatch","title":"Unpatch a ULPatch","text":"<p>TODO</p>"},{"location":"ulpatch/#ulpatch-management","title":"ULPatch Management","text":"<p>TODO</p>"},{"location":"ulpatch_test/","title":"ULPatchTest","text":""},{"location":"ulpatch_test/#ulpatch-test-introduction","title":"ULPatch Test Introduction","text":"<p>You could see the theory first, and <code>ultask_test --help</code> is also helpful.</p> <p>TODO</p>"},{"location":"ulpinfo/","title":"ULPInfo","text":""},{"location":"ulpinfo/#ulpinfo-introduction","title":"ULPInfo Introduction","text":"<p>You could see the theory first, and man ulpinfo is also helpful.</p>"},{"location":"ulpinfo/#common-arguments","title":"Common Arguments","text":"<p>The <code>--pid</code> is optional parameter, if you specify ulp.elf file with <code>--patch</code> parameter, ulpinfo will display the ulp.elf basic information. <code>--log-level|--lv=debug,dbg,info,inf,notice,note,warning,warn,error,err,crit,alert,emerg</code> to set log level.</p>"},{"location":"ultask/","title":"ULTask","text":""},{"location":"ultask/#ultask-introduction","title":"ULTask Introduction","text":"<p>You could see the theory first, and man ultask is also helpful.</p>"},{"location":"ultask/#common-arguments","title":"Common Arguments","text":"<p>The <code>--pid</code> parameter must be specified, passing in a valid process PID. <code>--log-level|--lv=debug,dbg,info,inf,notice,note,warning,warn,error,err,crit,alert,emerg</code> to set log level.</p>"},{"location":"ultask/#informations","title":"Informations","text":"<ul> <li>Use <code>--vmas</code> to display the VMA information of the target process.</li> <li>Use <code>--threads</code> to display thread information for the target process.</li> <li>Use <code>--fds</code> to display the file descriptor information for the target process.</li> <li>Use <code>--auxv</code> to display auxiliary vector information for the target process.</li> <li>Use <code>--status</code> to display the status information of the target process.</li> <li>Use <code>--syms|--symbols</code> to display the ELF symbol information of the target process.</li> </ul>"},{"location":"ultask/#dump","title":"Dump","text":"<p>Use <code>--dump</code> to dump the target process.</p>"},{"location":"ultask/#jump","title":"Jump","text":"<p>Using <code>--jmp</code> to modify a snippet of code to jump from one address to another is dangerous, and it's best not to do it unless you know what you're doing.</p>"},{"location":"ultask/#mapping","title":"Mapping","text":"<p>Use <code>--map</code> to map a file to the target process. This parameter and <code>--unmap</code> are a pair.</p>"},{"location":"ultask/#protection-of-a-region-of-memory","title":"Protection of a region of memory","text":"<p>Use <code>--mprotect</code> to modify the memory of the target process address space.</p>"},{"location":"zh/","title":"\u4e3b\u9875","text":""},{"location":"zh/#ulpatch","title":"ULPatch \u63cf\u8ff0","text":"<p>ULPatch \u662f\u5f00\u6e90\u7684\u7528\u6237\u7a7a\u95f4\u70ed\u8865\u4e01\u5de5\u5177\uff0c\u91c7\u7528 GPL-2.0 \u6216 \u66f4\u9ad8\u7248\u672c \u8bb8\u53ef\u8bc1\u3002</p>"},{"location":"zh/#ulpatch-logo","title":"ULPatch Logo","text":"<p>\u6211\u4f7f\u7528 drawio \u7ed8\u5236\u4e86\u4e0a\u9762\u6240\u793a\u7684 ULPatch LOGO\u3002\u8fd9\u4e2a\u6807\u5fd7\u7684\u542b\u4e49\u5f88\u660e\u663e\uff0c\u4f01\u9e45\u7684\u610f\u601d\u662f ULPatch \u652f\u6301 Linux\uff0c\u5b83\u770b\u8d77\u6765\u4e0e Linux Tux \u4e0d\u540c\u3002\u540c\u65f6\uff0c\u4f60\u53ef\u4ee5\u770b\u5230\u4f01\u9e45\u662f\u7531\u8865\u4e01\u7ec4\u6210\u7684\uff0c\u800c\u4e14\u4ed6\u8fd8\u6d3b\u7740\u3002</p> <p>Tux\uff0cLinux \u5185\u6838\u7684\u5b98\u65b9\u54c1\u724c\u5409\u7965\u7269\uff0c\u4f5c\u8005 Larry Ewing (lewing@isc.tamu.edu) \u548c The GIMP\u3002</p> <p>\u4f01\u9e45\u7684\u5fc3\u810f\u662f CPU \u56fe\u6807\uff0c\u8fd9\u8868\u793a ULPatch \u4e0e\u6307\u4ee4\u96c6\u5bc6\u5207\u76f8\u5173\u3002\u8fd9\u4e2a CPU \u56fe\u6807\u4e0d\u662f\u7531\u8865\u4e01\u7ec4\u6210\u7684\uff0c\u8868\u793a ULPatch \u53ea\u80fd\u5e94\u7528\u5230\u7528\u6237\u7a7a\u95f4\uff0c\u6bd5\u7adf\u5185\u6838\u7a7a\u95f4\u6709\u66f4\u5b8c\u6574\u7684 livepatch \u673a\u5236\u3002</p>"},{"location":"zh/#_1","title":"\u80cc\u666f","text":"<p>\u5bf9\u4e8e\u50cf Qemu \u8fd9\u6837\u65e0\u6cd5\u4e2d\u65ad\u548c\u91cd\u542f\u7684\u8fdb\u7a0b\uff0c\u6f0f\u6d1e\u4fee\u590d\u975e\u5e38\u56f0\u96be\u3002\u7279\u522b\u662f\u5bf9\u4e8e\u4e91\u4f9b\u5e94\u5546\u6765\u8bf4\uff0c\u70ed\u8865\u4e01\u975e\u5e38\u91cd\u8981\u3002</p> <p>\u5f53\u7136\uff0cULPatch \u9879\u76ee\u53ea\u8ba8\u8bba\u7528\u6237\u6a21\u5f0f\u7a0b\u5e8f\u3002</p>"},{"location":"zh/#ulpatch_1","title":"ULPatch \u652f\u6301\u7684\u67b6\u6784","text":"<p>\u7531\u4e8e\u6211\u7684\u77e5\u8bc6\u4f53\u7cfb\u548c\u4e2a\u4eba\u7ecf\u9a8c\uff0c\u4e0d\u80fd\u7406\u89e3\u638c\u63e1\u6240\u6709CPU\u67b6\u6784\uff0c\u6240\u6709\u6211\u53ea\u5217\u4e3e\u4e86\u6211\u719f\u6089\u7684\u67b6\u6784\uff0c\u5982\u679c\u4e0d\u80fd\u6ee1\u8db3\u4f60\u7684\u9700\u6c42\uff0c\u73af\u5883\u52a0\u5165\u6211\u4e00\u8d77\u5f00\u53d1\u3002</p> <ul> <li> <code>x86_64</code>: \u5feb\u597d\u4e86\uff0c\u652f\u6301\u4e00\u4e9b\u5c0fDemo.</li> <li> <code>aarch64</code>: \u5feb\u597d\u4e86\uff0c\u652f\u6301\u4e00\u4e9b\u5c0fDemo.</li> <li> <code>loongarch64</code>: \u8fd8\u4e0d\u652f\u6301</li> <li> <code>riscv64</code>: \u8fd8\u4e0d\u652f\u6301</li> </ul>"},{"location":"zh/#_2","title":"\u76f8\u5173\u9879\u76ee","text":"<p>ULPatch \u501f\u9274\u4e86 cloudlinux/libcare \u548c\u534e\u4e3a\u7684\u4e8c\u6b21\u5f00\u53d1 openeuler/libcareplus \u7b49\u591a\u4e2a\u4f18\u79c0\u7684\u5f00\u6e90\u9879\u76ee\u3002SUSE \u8fd8\u5f00\u6e90\u4e86\u81ea\u5df1\u7684\u5b9e\u65f6\u8865\u4e01\u89e3\u51b3\u65b9\u6848 SUSE/libpulp\u3002</p> <p>\u5185\u6838\u4e2d\u7684\u70ed\u8865\u4e01\u5df2\u7ecf\u662f\u4e00\u9879\u6bd4\u8f83\u6210\u719f\u7684\u6280\u672f\u3002\u5728linux \u5185\u6838 \u4e2d\u57fa\u4e8e ftrace \u5b9e\u73b0 livepatch\u3002</p> <p>\u8fd8\u6709\u4e00\u4e9b\u4f01\u4e1a\u7ea7\u8f6f\u4ef6\u3002QEMUCare \u53ef\u4ee5\u5728\u57fa\u4e8e QEMU \u7684\u865a\u62df\u5316\u7cfb\u7edf\u8fd0\u884c\u65f6\u81ea\u52a8\u4fee\u8865\u5b83\u4eec\uff0c\u800c\u65e0\u9700\u5173\u95ed\u6216\u8fc1\u79fb\u865a\u62df\u5316\u5c42\u6216\u91cd\u65b0\u542f\u52a8\u3002KernelCare SimplePatch \u662f\u4e00\u79cd\u5185\u6838\u5b9e\u65f6\u4fee\u8865\u4ea7\u54c1\uff0c\u53ef\u4e3a\u4e00\u7cfb\u5217\u6d41\u884c\u7684 Linux \u5185\u6838\u63d0\u4f9b\u5b89\u5168\u8865\u4e01\uff0c\u65e0\u9700\u91cd\u65b0\u542f\u52a8\u7cfb\u7edf\u5373\u53ef\u5b89\u88c5\u8fd9\u4e9b\u5185\u6838\u3002</p> <p>\u540c\u65f6\uff0c\u5185\u6838\u7684 <code>finit_module(2)</code> \u548c <code>init_module(2)</code> \u7cfb\u7edf\u8c03\u7528\u7684\u5b9e\u73b0\u4e5f\u5177\u6709\u5f88\u5927\u7684\u53c2\u8003\u4ef7\u503c\u3002\u5728 ULPatch \u5f00\u53d1\u7684\u65e9\u671f\u9636\u6bb5\uff0c\u91cd\u5b9a\u4f4d\u4ee3\u7801\u4e5f\u662f\u4ece\u8fd9\u4e24\u4e2a\u7cfb\u7edf\u8c03\u7528\u79fb\u690d\u800c\u6765\u7684\u3002</p> <p>\u4ece\u76ee\u524d\u5bf9\u4f18\u79c0\u9879\u76ee\u7684\u7814\u7a76\u6765\u770b\uff0c\u70ed\u8865\u4e01\u529f\u80fd\u4f9d\u8d56\u4e8e\u4fee\u6539\u51fd\u6570\u5165\u53e3\u5904\u7684\u6c47\u7f16\u6307\u4ee4\uff0c\u4f7f\u5176\u8df3\u8f6c\u5230\u65b0\u7684\u51fd\u6570\u3002</p> <p>\u6211\u8ba4\u4e3a\u6211\u5e94\u8be5\u5728\u53e6\u4e00\u4e2a\u6587\u6863\u800c\u4e0d\u662f README \u6587\u4ef6\u4e2d\u8be6\u7ec6\u8bf4\u660e ULPatch \u4ece\u8fd9\u4e9b\u5f00\u6e90\u9879\u76ee\u4e2d\u83b7\u5f97\u7684\u7075\u611f\u3002</p>"},{"location":"zh/#_3","title":"\u4f5c\u8005\u72ec\u767d","text":"<p>\u6211\u4e0d\u5e0c\u671b\u5377\u5165\u8bb8\u53ef\u8bc1\u4e4b\u6218\uff0c\u6240\u4ee5\uff0c\u5982\u679c\u672c\u9879\u76ee\u9519\u8bef\u5730\u5f15\u7528\u4e86\u5f00\u6e90\u4ee3\u7801\uff0c\u8bf7\u539f\u8c05\u6211\u3002\u6bd5\u7adf\uff0c\u8fd9\u4e0d\u662f\u4e00\u4e2a\u5546\u4e1a\u9879\u76ee\u3002</p> <p>\u6211\u4f7f\u7528 drawio \u7ed8\u5236\u4e86 ULPatch \u4e2d\u663e\u793a\u7684\u6240\u6709 logo \u548c\u77e2\u91cf\u56fe\u3002</p> <p>\u6211\u662f Linux \u65b0\u624b\uff0c\u5c0f\u5b66\u751f\u3002</p>"},{"location":"zh/#_4","title":"\u94fe\u63a5","text":"<ul> <li>GitHub RToax ULPatch<ul> <li>GitHub ULPatch</li> </ul> </li> <li>ULPatch \u6587\u6863 / en</li> </ul>"},{"location":"zh/CHANGELOG/","title":"Changelog","text":"<p>\u8be5\u9879\u76ee\u7684\u6240\u6709\u663e\u8457\u53d8\u5316\u90fd\u5c06\u8bb0\u5f55\u5728\u6b64\u6587\u4ef6\u4e2d\u3002</p> <p>\u683c\u5f0f\u57fa\u4e8e Keep a Changelog, \u5e76\u4e14\u8be5\u9879\u76ee\u9075\u5faa Semantic Versioning.</p> <p>\u522b\u5fd8\u4e86\u540c\u6b65\u4fee\u6539\u82f1\u6587\u7248CHNAGELOG.md\u6587\u4ef6\u3002</p>"},{"location":"zh/CHANGELOG/#_1","title":"\u672a\u53d1\u5e03","text":""},{"location":"zh/CHANGELOG/#_2","title":"\u91cd\u5927\u53d8\u66f4","text":""},{"location":"zh/CHANGELOG/#_3","title":"\u6dfb\u52a0","text":""},{"location":"zh/CHANGELOG/#_4","title":"\u66f4\u6539","text":""},{"location":"zh/CHANGELOG/#_5","title":"\u5f03\u7528","text":""},{"location":"zh/CHANGELOG/#_6","title":"\u79fb\u9664","text":"<ul> <li>\u5220\u9664 tests/plt\u3002</li> </ul>"},{"location":"zh/CHANGELOG/#_7","title":"\u4fee\u590d","text":""},{"location":"zh/CHANGELOG/#_8","title":"\u5b89\u5168","text":""},{"location":"zh/CHANGELOG/#_9","title":"\u6587\u6863","text":""},{"location":"zh/CHANGELOG/#_10","title":"\u5de5\u5177","text":""},{"location":"zh/CHANGELOG/#_11","title":"\u6d4b\u8bd5","text":""},{"location":"zh/CHANGELOG/#_12","title":"\u91cd\u5927\u53d8\u66f4","text":"<ul> <li>\u6dfb\u52a0 <code>ULPATCH_LICENSE()</code> \u5e76\u4e14 <code>ULPATCH_FILE_VERSION=5</code>.</li> </ul>"},{"location":"zh/CHANGELOG/#_13","title":"\u6dfb\u52a0","text":"<ul> <li>tests: \u6dfb\u52a0 engine \u6587\u4ef6\u5939\u3002</li> <li>\u6dfb\u52a0 ulpconfig.mk\u3002</li> <li>\u6dfb\u52a0 scripts/verbose.mk\u3002</li> <li>\u6dfb\u52a0 docker/build.sh\u3002</li> <li>\u51c6\u5907\u5c06 tests/hello \u4f7f\u7528 cmake \u7f16\u8bd1\u3002</li> <li>\u5c06 git \u4f5c\u4e3a\u4f9d\u8d56\u3002</li> </ul>"},{"location":"zh/CHANGELOG/#_14","title":"\u66f4\u6539","text":"<ul> <li>utils: \u4eceutil.h\u4e2d\u5206\u79bb\u5934\u6587\u4ef6\u3002</li> <li>task: \u4ececore.c\u5206\u79bb\u51fa\u5bf9\u5e94\u7279\u6027\u7684\u6e90\u7801\u3002</li> <li>tests: \u91cd\u547d\u540d tests/disasm/disasm-tst1.c \u4e3a tests/bfd/symbol.c\u3002</li> <li>tests: \u5f15\u5165linker scripts \u6765\u904d\u5386\u6240\u6709\u6d4b\u8bd5\u4f8b\u3002</li> <li>tests: \u4f7f\u7528linker scripts \u66ff\u4ee3 <code>TEST_STUB()</code>\u3002</li> </ul>"},{"location":"zh/CHANGELOG/#_15","title":"\u5f03\u7528","text":""},{"location":"zh/CHANGELOG/#_16","title":"\u79fb\u9664","text":"<ul> <li>\u79fb\u9664 tests/disasm/disasm-tst0.c\u3002</li> </ul>"},{"location":"zh/CHANGELOG/#_17","title":"\u4fee\u590d","text":"<ul> <li>\u4fee\u590dtests/disasm\u7f16\u8bd1\u95ee\u9898\u3002</li> <li>\u4f20\u9012<code>task_attach()</code> \u7684\u8fd4\u56de\u503c\u5230\u8c03\u7528\u8005\u3002</li> </ul>"},{"location":"zh/CHANGELOG/#_18","title":"\u5b89\u5168","text":""},{"location":"zh/CHANGELOG/#_19","title":"\u6587\u6863","text":""},{"location":"zh/CHANGELOG/#_20","title":"\u5de5\u5177","text":""},{"location":"zh/CHANGELOG/#_21","title":"\u6d4b\u8bd5","text":"<ul> <li>\u4ec5\u4ec5\u5728\u7f16\u8bd1ultask\u548culftrace\u65f6\u624d\u6d4b\u8bd5\u5b83\u4eec\u3002</li> <li>\u6dfb\u52a0 tests/bfd \u5230 CMake \u7f16\u8bd1\u5217\u8868\u3002</li> </ul>"},{"location":"zh/CHANGELOG/#_22","title":"\u91cd\u5927\u53d8\u66f4","text":"<ul> <li>\u6dfb\u52a0<code>ULPATCH_AUTHOR()</code>\u5e76\u4e14\u4fee\u6539<code>ULPATCH_FILE_VERSION=4</code>\u3002</li> </ul>"},{"location":"zh/CHANGELOG/#_23","title":"\u6dfb\u52a0","text":"<ul> <li>\u6dfb\u52a0scripts/modify-return.sh\u4fee\u6539\u51fd\u6570\u8fd4\u56de\u503c\u4e3afalse\u3002</li> <li>\u6dfb\u52a0CMake\u5b8f <code>CONFIG_OPENSSL</code>\u3002</li> <li>\u589e\u52a0\u5bf9 OpenSSL \u7684\u4f9d\u8d56\uff0c\u5e76\u4e14\u6dfb\u52a0 fmd5sum() \u76f8\u5173\u51fd\u6570\u3002</li> <li>\u589e\u52a0\u5934\u6587\u4ef6 /usr/include/ulpatch/version.h\u3002</li> <li>rpmbuild.sh \u6dfb\u52a0 --nocheck \u53c2\u6570\u3002</li> <li>task: \u6dfb\u52a0C\u5b8f <code>task_vdso_vma(task)</code>\u3002</li> <li>ultask: \u652f\u6301 <code>--dump vdso</code>\u3002</li> </ul>"},{"location":"zh/CHANGELOG/#_24","title":"\u66f4\u6539","text":"<ul> <li>\u91cd\u547d\u540d src/ulconfig \u4e3a src/ulpconfig.sh.in\u3002</li> </ul>"},{"location":"zh/CHANGELOG/#_25","title":"\u5f03\u7528","text":""},{"location":"zh/CHANGELOG/#_26","title":"\u79fb\u9664","text":""},{"location":"zh/CHANGELOG/#_27","title":"\u4fee\u590d","text":""},{"location":"zh/CHANGELOG/#_28","title":"\u5b89\u5168","text":""},{"location":"zh/CHANGELOG/#_29","title":"\u6587\u6863","text":"<ul> <li>\u6dfb\u52a0 CHANGELOG.md</li> <li>man\u624b\u518c\u6dfb\u52a0Copyright\u6ce8\u91ca\u3002</li> </ul>"},{"location":"zh/CHANGELOG/#_30","title":"\u5de5\u5177","text":""},{"location":"zh/CONTRIBUTING/","title":"\u8d21\u732e","text":""},{"location":"zh/CONTRIBUTING/#ulpatch","title":"ULPatch \u8d21\u732e\u6307\u5357","text":"<p>\u975e\u5e38\u6b22\u8fce\u6765\u4e00\u8d77\u5f00\u53d1 ULPatch\uff0c\u5e76\u4e14\u975e\u5e38\u611f\u8c22\uff01\u52ff\u4ee5\u5584\u5c0f\u800c\u4e0d\u4e3a\u3002</p>"},{"location":"zh/CONTRIBUTING/#_1","title":"\u62a5\u544a\u9519\u8bef","text":"<p>\u62a5\u544a\u7f51\u5740 https://github.com/Rtoax/ulpatch/issues</p> <p>\u5982\u679c\u4f60\u8981\u4e0a\u62a5\u4e00\u4e2a\u9519\u8bef\uff0c\u8bf7\u5305\u542b\uff1a</p> <ul> <li>\u4f60\u6240\u4f7f\u7528\u7684\u64cd\u4f5c\u7cfb\u7edf\u7248\u672c\u3002</li> <li>\u5982\u679c\u4f60\u7684\u7cfb\u7edf\u4e0d\u662f\u4e3b\u6d41\u7cfb\u7edf\uff0c\u800c\u662f\u81ea\u5b9a\u4e49\u7684\uff0c\u8bf7\u4f8b\u4e3e\u57fa\u7840\u8f6f\u4ef6\u7684\u7248\u672c\uff0c\u5982\uff1a<code>glibc</code>, <code>kernel</code>, <code>binutils</code>, <code>elfutils</code>\u3002</li> <li>\u4f60\u7684\u7cfb\u7edf\u7684\u914d\u7f6e\u8be6\u60c5\u5bf9 BUG \u8c03\u8bd5\u4f1a\u6709\u5f88\u5927\u5e2e\u52a9\u3002</li> <li>\u63d0\u4f9b\u8be6\u7ec6\u7684\u590d\u7ebf BUG \u7684\u6b65\u9aa4\u3002</li> </ul>"},{"location":"zh/CONTRIBUTING/#bug","title":"BUG\u89e3\u51b3","text":"<p>\u901a\u8fc7 GitHub-issues \u6765\u67e5\u770b\u5f53\u524d\u7684 BUG\u3002\u6240\u6709\u6807\u8bb0\u4e3a<code>bug</code>\u6216<code>help wanted</code>\u90fd\u662f\u4f60\u53ef\u4ee5\u5173\u6ce8\u7684\u3002</p>"},{"location":"zh/CONTRIBUTING/#_2","title":"\u5b9e\u73b0\u7279\u6027","text":"<p>\u901a\u8fc7 GitHub-issues \u6765\u67e5\u770b\u5f53\u524d\u7684\u65b0\u7279\u6027\u3002\u6240\u6709\u6807\u8bb0\u4e3a<code>enhancement</code>\u548c<code>help wanted</code>\u90fd\u662f\u4f60\u53ef\u4ee5\u5173\u6ce8\u7684\u3002</p>"},{"location":"zh/CONTRIBUTING/#_3","title":"\u64b0\u5199\u6587\u6863","text":"<p>ULPatch \u60f3\u8981\u63d0\u4f9b\u5b8c\u5907\u7684\u6587\u6863\uff0c\u65e0\u8bba\u662f ULPatch \u7684\u5b98\u65b9\u6587\u6863\uff0c\u751a\u81f3\u662f\u7f51\u4e0a\u7684\u535a\u5ba2\u3001\u6587\u7ae0\u7b49\u3002</p>"},{"location":"zh/CONTRIBUTING/#_4","title":"\u63d0\u4ea4\u53cd\u9988","text":"<p>\u6700\u597d\u7684\u63d0\u4ea4\u53cd\u9988\u7684\u65b9\u6cd5\u662f\u63d0\u4ea4\u4e00\u4e2a\u65b0\u7684 GitHub-issues\u3002</p> <p>\u5982\u679c\u4f60\u60f3\u8981\u4e00\u4e2a\u65b0\u7279\u6027\uff1a</p> <ul> <li>\u89e3\u91ca\u65b0\u7279\u6027\u662f\u5982\u4f55\u5de5\u4f5c\u7684\u3002</li> <li>\u4f7f\u8303\u56f4\u5c3d\u53ef\u80fd\u7a84\uff0c\u4ee5\u4fbf\u4e8e\u5b9e\u73b0\u3002</li> <li>\u8bf7\u8bb0\u4f4f\uff0c\u8fd9\u662f\u4e00\u4e2a\u5fd7\u613f\u8005\u9a71\u52a8\u7684\u9879\u76ee\uff0c\u6b22\u8fce:)</li> </ul>"},{"location":"zh/CONTRIBUTING/#ulpatch_1","title":"ULPatch \u7b56\u7565","text":"<p>\u6700\u8fd1\uff0c \u5f88\u591a\u4fc4\u7f57\u65af\u7684linux\u5185\u6838\u7ef4\u62a4\u8005\u88ab\u79fb\u9664\u51famaintainer\u5217\u8868, Greg Kroah-Hartman Remove some entries due to various compliance requirements.</p> <p>\u6211\u5e0c\u671b ULPatch \u6c38\u8fdc\u4e0d\u8bbe\u8ba1\u5230\u653f\u6cbb\u56e0\u7d20\uff0c\u987a\u4fbf\uff0c\u6211\u7231\u6211\u7684\u6545\u4e61\u3002</p>"},{"location":"zh/INSTALL/","title":"\u5b89\u88c5","text":""},{"location":"zh/INSTALL/#_1","title":"\u4ece\u6e90\u4ee3\u7801\u5b89\u88c5","text":""},{"location":"zh/INSTALL/#_2","title":"\u5b89\u88c5\u4f9d\u8d56","text":""},{"location":"zh/INSTALL/#fedorarhelalmalinux","title":"Fedora/RHEL/AlmaLinux \u64cd\u4f5c\u7cfb\u7edf","text":"<p>\u5728 RHEL \u7cfb\u5217\u517c\u5bb9\u7684\u53d1\u884c\u7248\u4e0a\uff0c\u901a\u8fc7 rpm \u548c dnf/yum\u7ba1\u7406\u8f6f\u4ef6\u3002</p> <pre><code># \u50cf RHEL\uff0c\u6709\u4e9b\u53d1\u884c\u7248\u9700\u8981\u5b89\u88c5 epel-release \u5305\uff0cFedora \u4e0d\u9700\u8981\n$ sudo dnf install -y epel-release\n$ sudo dnf group install -y development-tools\n$ sudo dnf install -y \\\n    bash-completion-devel \\\n    binutils-devel \\\n    capstone-devel \\\n    cmake \\\n    elfutils-devel \\\n    elfutils-libelf-devel \\\n    gcc \\\n    gcc-c++ \\\n    git \\\n    glibc-devel \\\n    libunwind-devel \\\n    openssl-devel \\\n    util-linux\n</code></pre>"},{"location":"zh/INSTALL/#debianubuntu","title":"Debian/Ubuntu \u64cd\u4f5c\u7cfb\u7edf","text":"<p>\u5728 Debian \u7cfb\u5217\u517c\u5bb9\u7684\u53d1\u884c\u7248\u4e0a\uff0c\u901a\u8fc7 dpkg \u548c apt \u7ba1\u7406\u8f6f\u4ef6\u3002</p> <pre><code>$ sudo apt install -y build-essential\n$ sudo apt install -y \\\n    bash-completion \\\n    binutils-dev \\\n    cmake \\\n    gcc \\\n    git \\\n    libc6 \\\n    libcapstone-dev \\\n    libelf-dev \\\n    libssl-dev \\\n    libunwind-dev \\\n    util-linux\n</code></pre> <p>\u5982\u679c\u60f3\u8981\u6784\u5efa\u6587\u6863\uff0c\u9700\u8981\u5b89\u88c5\uff1a</p> <pre><code>$ sudo apt install -y mkdocs\n</code></pre> <p>\u7136\u540e\uff0c\u4f60\u53ef\u4ee5\u5728ulpatch\u4ed3\u5e93\u6839\u76ee\u5f55\u6267\u884c <code>mkdocs build</code> \u548c <code>mkdocs serve</code>\uff0c\u7136\u540e\u8bbf\u95ee http://127.0.0.1:8000/ulpatch/\u3002</p>"},{"location":"zh/INSTALL/#_3","title":"\u6e90\u7801\u7f16\u8bd1\u8f6f\u4ef6","text":"<pre><code>$ git clone https://github.com/rtoax/ulpatch\n$ cd ulpatch\n$ mkdir build\n$ cd build\n$ cmake -DCMAKE_INSTALL_PREFIX=/usr \\\n    -DCONFIG_BUILD_TESTING=OFF \\\n    -DCONFIG_BUILD_ULFTRACE=OFF \\\n    -DCONFIG_BUILD_ULTASK=OFF \\\n    ..\n$ make -j$(nproc)\n</code></pre> <p>\u6216\u8005\u4f60\u53ef\u4ee5\u901a\u8fc7\u6307\u5b9a <code>-B build</code> \u53c2\u6570\uff0c\u50cf <code>cmake -B build -DCMAKE_BUILD_TYPE=Release</code>\u3002\u5982\u679c\u4f60\u60f3\u8981\u7f16\u8bd1\u65f6\u67e5\u770b\u8be6\u60c5\uff0c\u4f7f\u7528<code>make VERBOSE=1</code>\u3002</p> <p>\u9ed8\u8ba4\u4f7f\u7528<code>gcc</code>\uff0c\u5982\u679c\u60f3\u8981\u4f7f\u7528<code>clang</code>\uff0c\u9700\u8981\u6307\u5b9a cmake \u53c2\u6570<code>-DCMAKE_C_COMPILER=clang</code>\u3002</p>"},{"location":"zh/INSTALL/#cmake","title":"CMake \u76f8\u5173\u5b8f","text":""},{"location":"zh/INSTALL/#cmake_build_type","title":"CMAKE_BUILD_TYPE","text":"<p>\u4f60\u53ef\u4ee5\u901a\u8fc7<code>CMAKE_BUILD_TYPE</code>\u6307\u5b9a\u7f16\u8bd1\u7c7b\u578b\uff0c\u4f8b\u5982 <code>-DCMAKE_BUILD_TYPE=Debug</code>(<code>Release</code>,<code>Debug</code>,<code>RelWithDebInfo</code>,<code>MinSizeRel</code>)\uff0c\u4e00\u4e2a\u4f8b\u5b50\uff1a</p> <pre><code>$ cmake -DCMAKE_BUILD_TYPE=Debug ..\n</code></pre> <p>\u9ed8\u8ba4\u7f16\u8bd1\u7c7b\u578b\u4e3a <code>Debug</code>\u3002</p>"},{"location":"zh/INSTALL/#config_build_pie_exe","title":"CONFIG_BUILD_PIE_EXE","text":"<p>\u7f16\u8bd1ULPatch\u53ef\u6267\u884c\u6587\u4ef6\u4e3aPIE(<code>Position-Independent-Executable</code>)\uff0c\u53ef\u4ee5\u6267\u884c\uff1a</p> <pre><code>$ cmake -DCONFIG_BUILD_PIE_EXE=1 ..\n</code></pre> <p>\u8fd9\u4e2a\u53c2\u6570\u5bf9\u7f16\u8bd1PIE\u6587\u4ef6\u5f88\u6709\u5e2e\u52a9\u3002</p>"},{"location":"zh/INSTALL/#config_build_testing","title":"CONFIG_BUILD_TESTING","text":"<p>\u901a\u8fc7\u6307\u5b9a <code>CONFIG_BUILD_TESTING</code> \u6765\u51b3\u5b9a\u662f\u5426\u7f16\u8bd1\u6d4b\u8bd5\u7a0b\u5e8f <code>ulpatch_test</code>\uff0c\u9ed8\u8ba4\u5f00\u542f <code>ON</code>\u3002\u5982\u679c\u4f60\u60f3\u8981\u5173\u95ed\uff0c\u53ef\u4ee5\uff1a</p> <pre><code>$ cmake -DCONFIG_BUILD_TESTING=0 ..\n</code></pre>"},{"location":"zh/INSTALL/#config_build_ulftrace","title":"CONFIG_BUILD_ULFTRACE","text":"<p>\u901a\u8fc7\u6307\u5b9a <code>CONFIG_BUILD_ULFTRACE</code> \u6765\u51b3\u5b9a\u662f\u5426\u7f16\u8bd1 <code>ulftrace</code>\uff0c\u9ed8\u8ba4\u5f00\u542f <code>ON</code>\u3002\u5982\u679c\u4f60\u60f3\u8981\u5173\u95ed\uff0c\u53ef\u4ee5\uff1a</p> <pre><code>$ cmake -DCONFIG_BUILD_ULFTRACE=0 ..\n</code></pre>"},{"location":"zh/INSTALL/#config_build_ultask","title":"CONFIG_BUILD_ULTASK","text":"<p>\u901a\u8fc7\u6307\u5b9a <code>CONFIG_BUILD_ULTASK</code> \u6765\u51b3\u5b9a\u662f\u5426\u7f16\u8bd1\u8fdb\u7a0b\u4fee\u6539\u5668<code>ultask</code>\uff0c\u9ed8\u8ba4\u5173\u95ed <code>ON</code>\u3002\u5982\u679c\u4f60\u60f3\u8981\u5173\u95ed\uff0c\u53ef\u4ee5\uff1a</p> <pre><code>$ cmake -DCONFIG_BUILD_ULTASK=0 ..\n</code></pre>"},{"location":"zh/INSTALL/#config_build_man","title":"CONFIG_BUILD_MAN","text":"<p>\u901a\u8fc7\u6307\u5b9a <code>CONFIG_BUILD_MAN</code> \u6765\u51b3\u5b9a\u662f\u5426\u7f16\u8bd1\u76f8\u5173\u624b\u518c\uff0c\u9ed8\u8ba4\u5f00\u542f <code>ON</code>\u3002\u5982\u679c\u4f60\u60f3\u8981\u5173\u95ed\uff0c\u53ef\u4ee5\uff1a</p> <pre><code>$ cmake -DCONFIG_BUILD_MAN=0 ..\n</code></pre>"},{"location":"zh/INSTALL/#config_build_bash_completions","title":"CONFIG_BUILD_BASH_COMPLETIONS","text":"<p>\u901a\u8fc7\u6307\u5b9a <code>CONFIG_BUILD_BASH_COMPLETIONS</code> \u6765\u51b3\u5b9a\u662f\u5426\u5b89\u88c5bash\u8865\u5168\u529f\u80fd\uff0c\u9ed8\u8ba4\u5f00\u542f <code>ON</code>\u3002\u5982\u679c\u4f60\u60f3\u8981\u5173\u95ed\uff0c\u53ef\u4ee5\uff1a</p> <pre><code>$ cmake -DCONFIG_BUILD_BASH_COMPLETIONS=0 ..\n</code></pre>"},{"location":"zh/INSTALL/#config_capstone","title":"CONFIG_CAPSTONE","text":"<p>CMake <code>CONFIG_CAPSTONE</code>\u9009\u9879\u51b3\u5b9a\u662f\u5426\u652f\u6301<code>capstone</code>\uff0c\u9ed8\u8ba4\u5f00\u542f <code>ON</code>\u3002\u5982\u679c\u4f60\u60f3\u8981\u5173\u95ed\uff0c\u53ef\u4ee5\uff1a</p> <p><pre><code>$ cmake -DCONFIG_CAPSTONE=OFF ..\n</code></pre> \u5982\u679c <code>CONFIG_CAPSTONE=ON</code>(\u9ed8\u8ba4)\uff0c\u5e76\u4e14\u4f60\u7684\u7cfb\u7edf\u6ca1\u6709\u5b89\u88c5<code>openssl</code>\uff0c<code>cmake</code>\u5c06\u62a5\u9519\u3002</p>"},{"location":"zh/INSTALL/#config_openssl","title":"CONFIG_OPENSSL","text":"<p>CMake <code>CONFIG_OPENSSL</code>\u9009\u9879\u51b3\u5b9a\u662f\u5426\u652f\u6301<code>openssl</code>\uff0c\u9ed8\u8ba4\u5f00\u542f <code>ON</code>\u3002\u5982\u679c\u4f60\u60f3\u8981\u5173\u95ed\uff0c\u53ef\u4ee5\uff1a</p> <p><pre><code>$ cmake -DCONFIG_OPENSSL=OFF ..\n</code></pre> \u5982\u679c <code>CONFIG_OPENSSL=ON</code>(\u9ed8\u8ba4)\uff0c\u5e76\u4e14\u4f60\u7684\u7cfb\u7edf\u6ca1\u6709\u5b89\u88c5<code>openssl</code>\uff0c<code>cmake</code>\u5c06\u62a5\u9519\u3002</p>"},{"location":"zh/INSTALL/#config_libunwind","title":"CONFIG_LIBUNWIND","text":"<p>CMake <code>CONFIG_LIBUNWIND</code>\u9009\u9879\u51b3\u5b9a\u662f\u5426\u652f\u6301<code>libunwind</code>\uff0c\u9ed8\u8ba4\u5f00\u542f <code>ON</code>\u3002\u5982\u679c\u4f60\u60f3\u8981\u5173\u95ed\uff0c\u53ef\u4ee5\uff1a</p> <pre><code>$ cmake -DCONFIG_LIBUNWIND=OFF ..\n</code></pre> <p>\u5982\u679c <code>CONFIG_LIBUNWIND=ON</code>(\u9ed8\u8ba4)\uff0c\u5e76\u4e14\u4f60\u7684\u7cfb\u7edf\u6ca1\u6709\u5b89\u88c5<code>libunwind</code>\uff0c<code>cmake</code>\u5c06\u62a5\u9519\u3002</p>"},{"location":"zh/INSTALL/#ulpatch","title":"\u5b89\u88c5 ULPatch","text":"<pre><code>$ sudo make install\n</code></pre>"},{"location":"zh/INSTALL/#ulpatch_1","title":"\u5378\u8f7d ULPatch","text":"<pre><code>$ sudo make uninstall\n</code></pre>"},{"location":"zh/INSTALL/#rpm","title":"\u4ece RPM \u5b89\u88c5","text":""},{"location":"zh/INSTALL/#_4","title":"\u76f4\u63a5\u4e0b\u8f7d","text":"<p>\u53ef\u4ee5\u5728 \u53d1\u5e03\u8bb0\u5f55 \u4e0b\u8f7d\u3002</p>"},{"location":"zh/INSTALL/#_5","title":"\u5b89\u88c5","text":"<p>\u7136\u540e\uff0c\u4f7f\u7528 <code>rpm</code> \u6216\u8005 <code>dnf</code> \u547d\u4ee4\u5b89\u88c5 RPM \u5305\u3002</p> <pre><code>$ sudo dnf install ulpatch-*.rpm\n</code></pre> <p>\u4f7f\u7528\u2018localinstall\u2019\u53ef\u80fd\u66f4\u597d(dnf &lt;= 4\uff0cdnf5 \u4e0d\u518d\u652f\u6301 \u201clocalinstall\u201d)\u3002</p> <p>\u6216\u8005\uff1a</p> <pre><code>$ sudo rpm -ivh ulpatch-*.rpm\n</code></pre> <p>\u5982\u679c\u5347\u7ea7\uff1a</p> <pre><code>$ sudo rpm -iUh ulpatch-*.rpm\n</code></pre>"},{"location":"zh/INSTALL/#rpm_1","title":"\u6784\u5efa RPM \u5305","text":"<p>ULPatch \u5f53\u524d\u53ea\u652f\u6301\u6784\u5efa RPM \u5305\uff0c\u4f60\u53ef\u4ee5\u5728 Fedora\u3001RHEL \u8fd9\u4e9b\u7cfb\u7edf\u4e0a\u6784\u5efa\u3002</p> <p>\u4f60\u9700\u8981\u5b89\u88c5<code>rpm-build</code> \u8f6f\u4ef6\u5305\uff1a</p> <pre><code>$ sudo dnf install rpm-build\n</code></pre> <p>\u7136\u540e\uff0c\u5b89\u88c5 ULPatch \u6784\u5efa\u6240\u9700\u8981\u7684\u4f9d\u8d56\uff1a</p> <pre><code># Or sudo dnf install -y dnf-plugins-core\n$ sudo dnf install -y 'dnf-command(builddep)'\n$ sudo dnf builddep -y ulpatch.spec\n</code></pre> <p>\u73b0\u5728\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7<code>rpmbuild</code>\u6784\u5efaRPM\u5305\u4e86\u3002\u5728ULPatch\u4ee3\u7801\u4ed3\u5e93\u7684\u6839\u76ee\u5f55\u4e0b\uff0c\u6211\u5df2\u7ecf\u5c01\u88c5\u4e86<code>rpmbuild.sh</code>\u547d\u4ee4\u3002\u5f53\u7136\uff0c\u4f60\u9700\u8981\u5148\u6253\u5305\u6e90\u4ee3\u7801\u3002\u751f\u6210 tar \u5305\uff1a</p> <pre><code>$ ./archive.sh\n</code></pre> <p>\u6784\u5efa RPM \u5305\uff1a</p> <pre><code>$ ./rpmbuild.sh\n</code></pre>"},{"location":"zh/INSTALL/#_6","title":"\u5b89\u88c5\u5b8c\u6210\u540e","text":"<p>\u73b0\u5728\uff0c\u4f60\u5c31\u53ef\u4ee5\u5f00\u59cb\u4f7f\u7528\u4e86\uff0c\u73a9\u7684\u5f00\u5fc3\u3002</p>"},{"location":"zh/RELEASE/","title":"\u53d1\u5e03","text":""},{"location":"zh/RELEASE/#ulpatch","title":"ULPatch \u53d1\u5e03","text":"<p>\u8fd8\u672a\u5f00\u53d1\u5b8c\u6210\uff0c\u4e0d\u8981\u4f7f\u7528\u3002</p> <p>\u6211\u89c9\u5f97 ULPatch \u4f1a\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u5f00\u6e90\u7528\u6237\u6001\u70ed\u8865\u4e01\u89e3\u51b3\u65b9\u6848\uff0c\u4f46\u662f\u6211\u6ca1\u6709\u8db3\u591f\u7684\u65f6\u95f4\u5f00\u53d1\uff0c\u6240\u4ee5\uff0c\u4f60\u61c2\u5f97\u3002</p> <p>\u6b63\u5f0f\u53d1\u5e03\u4e4b\u524d\uff0c\u53ef\u80fd\u4f1a\u4efb\u610f\u4fee\u6539\u547d\u4ee4\u884c\u540d\u79f0\u53ca\u5176\u5165\u53c2\u3002</p>"},{"location":"zh/RELEASE/#_1","title":"\u94fe\u63a5","text":"<ul> <li>ULPatch \u53d1\u5e03\u8bb0\u5f55</li> </ul>"},{"location":"zh/THEORY/","title":"\u539f\u7406","text":""},{"location":"zh/THEORY/#_1","title":"\u539f\u7406","text":"<p>\u672c\u9875\u53ea\u4ecb\u7ecd\u4e86 ULPatch \u7684\u539f\u7406\uff0c\u6ca1\u6709\u4ecb\u7ecd\u5177\u4f53\u5b9e\u73b0\u7ec6\u8282\u3002</p> <p>\u6240\u6709\u7a0b\u5e8f\u90fd\u662f\u5355\u7ebf\u7a0b\u6a21\u578b\uff0c\u56e0\u6b64\u60a8\u4e0d\u4f1a\u5728\u4ee3\u7801\u4e2d\u770b\u5230\u540c\u6b65\u9501\u3002\u5f53\u7136\uff0c\u6211\u4eec\u9700\u8981\u8003\u8651\u76ee\u6807\u8fdb\u7a0b\u7684\u591a\u7ebf\u7a0b\u60c5\u51b5\u3002</p>"},{"location":"zh/THEORY/#patch","title":"Patch","text":"<p>\u4e0b\u56fe\u663e\u793a\u4e86 Livepatch \u52a0\u8f7d\u8fc7\u7a0b\u3002</p> <p></p> <p>\u5177\u4f53\u6b65\u9aa4\u5982\u4e0b\uff1a</p> <ol> <li>\u5c06\u6e90\u4ee3\u7801\u7f16\u8bd1\u6210\u4e00\u4e2a\u53ef\u91cd\u5b9a\u4f4d\u7684 ELF \u6587\u4ef6\uff0c\u5373 livepatch \u6587\u4ef6;</li> <li>\u5c06\u53ef\u91cd\u5b9a\u4f4d\u7684 ELF \u6587\u4ef6\u52a0\u8f7d\u5230\u76ee\u6807\u8fdb\u7a0b\u5730\u5740\u7a7a\u95f4;</li> <li>\u6839\u636e\u76ee\u6807\u8fdb\u7a0b\u5730\u5740\u7b26\u53f7\u8868\uff0c\u5bf9 patch \u4e2d\u7684\u7b26\u53f7\u8fdb\u884c\u91cd\u65b0\u5b9a\u4f4d;</li> <li>\u4fee\u6539 patch \u51fd\u6570\u5165\u53e3\uff0c\u8df3\u8f6c\u5230 patch \u51fd\u6570;</li> </ol> <p>\u76ee\u6807\u51fd\u6570\u7684\u8d77\u59cb\u6307\u4ee4\u5c06\u88ab\u66ff\u6362\u4e3a\u8df3\u8f6c\u81f3\u8865\u4e01\u51fd\u6570\u7684\u8df3\u8f6c\u6307\u4ee4\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a</p> <p></p>"},{"location":"zh/THEORY/#unpatch","title":"Unpatch","text":"<p>Livepatch \u7684\u5378\u8f7d\u8fc7\u7a0b\u5982\u4e0b\u56fe\u6240\u793a\u3002</p> <p></p> <p><code>unpatch</code> \u64cd\u4f5c\u662f <code>patch</code> \u7684\u53cd\u5411\u64cd\u4f5c\uff0c\u4f46\u6ca1\u6709\u91cd\u5b9a\u4f4d\u8fc7\u7a0b\u3002</p>"},{"location":"zh/THEORY/#ultask","title":"ULTask","text":"<p>ULTask \u662f\u4fee\u6539\u76ee\u6807\u8fdb\u7a0b\u7684\u6709\u7528\u5de5\u5177\uff0c\u6211\u79f0\u4e4b\u4e3a Program Modifier\u3002<code>CONFIG_BUILD_ULTASK</code> \u51b3\u5b9a\u662f\u5426\u7f16\u8bd1 <code>ultask</code>\u3002\u67e5\u770b\u624b\u518c <code>ultask(8)</code> \u4ee5\u4e86\u89e3\u66f4\u591a\u4fe1\u606f\u3002</p> <p>ULTask \u4f7f\u7528 <code>/proc/</code> \u6587\u4ef6\u7cfb\u7edf\u5bf9\u5bf9\u76ee\u6807\u8fdb\u7a0b\u8fdb\u884c\u4fee\u6539\u548c\u67e5\u770b\u3002\u4f8b\u5982\uff0c\u901a\u8fc7 <code>/proc/PID/mem</code> \u5bf9\u76ee\u6807\u8fdb\u7a0b\u5185\u5b58\u8fdb\u884c\u8bfb\u53d6\u6216\u4fee\u6539\u3002</p> <p>TODO</p>"},{"location":"zh/THEORY/#ulftrace","title":"ULFtrace","text":"<p>\u4e0e linux ftrace \u76f8\u540c\uff0c\u9700\u8981 gcc <code>-pg</code> \u7f16\u8bd1\u9009\u9879\u3002<code>CONFIG_BUILD_ULFTRACE</code> \u51b3\u5b9a\u662f\u5426\u7f16\u8bd1 <code>ulftrace</code>\u3002\u67e5\u770b\u624b\u518c <code>ulftrace(8)</code> \u4ee5\u4e86\u89e3\u66f4\u591a\u4fe1\u606f\u3002</p> <p>TODO</p>"},{"location":"zh/TODO/","title":"\u672a\u5b8c\u5f85\u7eed","text":""},{"location":"zh/TODO/#_1","title":"\u672a\u5b8c\u6210\u4efb\u52a1\u5217\u8868","text":""},{"location":"zh/TODO/#_2","title":"\u5f53\u524d\u4efb\u52a1","text":"<ul> <li>\u50cfGDB\u4e00\u6837\u652f\u6301\u52a0\u8f7d\u7b26\u53f7\u8868\u3002</li> <li>\u4e00\u4e9b\u7b26\u53f7\u5c06\u88ab\u4f18\u5316\u6389\uff0c\u5982\u4f55\u5904\u7406\uff1f</li> <li>\u652f\u6301 Qemu\u3002</li> <li>\u652f\u6301\u591a\u7ebf\u7a0b\uff0c\u5e76\u7ebf\u7a0b\u5b89\u5168\uff0c\u4f7f\u7528<code>ptrace(2)</code>\u3002</li> <li>\u6dfb\u52a0\u5df2\u7ecf\u8f7d\u5165\u8865\u4e01\u7684\u7b26\u53f7\u8868\uff0c\u7528\u4ee5\u652f\u6301\u4e92\u76f8\u4f9d\u8d56\u7684\u8865\u4e01\u3002</li> <li>\u652f\u6301\u672a\u521d\u59cb\u5316\u7684\u53d8\u91cf\uff0c\u89c1<code>.bss</code> <code>SHT_NOBITS</code>\u3002</li> <li>ULPatch VMA \u6700\u597d\u4e0d\u4f7f\u7528\u6587\u4ef6\u6620\u5c04\u3002</li> <li>\u91cd\u5b9a\u4f4d\u6761\u76ee\u8d85\u51fa\u5730\u5740\u7a7a\u95f4\u8303\u56f4\u3002</li> <li>\u53ef\u53c2\u89c1\u5185\u6838\u8865\u4e01\u96c6 arm64: module: improve module VA range selection</li> </ul>"},{"location":"zh/TODO/#_3","title":"\u672a\u6765\u89c4\u5212","text":"<ul> <li>\u652f\u6301\u52a8\u6001\u5e93\u7684\u70ed\u8865\u4e01\u3002</li> <li>\u652f\u6301\u9759\u6001\u7f16\u8bd1\u7684\u53ef\u6267\u884c\u6587\u4ef6\u3002</li> <li>\u652f\u6301\u7b7e\u540d\u548c\u68c0\u6d4b\u3002</li> <li>\u652f\u6301\u65e0\u7b26\u53f7\u8868\uff08<code>strip</code>\uff09\u7684\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u7b26\u53f7\u8868\u3002</li> <li>\u652f\u6301<code>loongarch64</code>\u3002</li> <li>\u652f\u6301 GUI\uff0c\u53ef\u4ee5\u7528 GTK/Qt \u5b9e\u73b0\u3002</li> <li>\u50cf\u5185\u6838<code>module_init</code>,<code>module_exit</code>\u4e00\u6837\u652f\u6301\u6267\u884c\u521d\u59cb\u5316\u548c\u9000\u51fa\u51fd\u6570\u3002</li> <li>\u6216\u8bb8\u6211\u4eec\u5e94\u8be5\u4f7f\u7528 <code>dlopen/dlsym</code> \u5b9e\u73b0\u70ed\u8865\u4e01\u7684\u63d2\u5165\u3002</li> <li>\u652f\u6301 C++\u3002</li> </ul>"},{"location":"zh/TODO/#_4","title":"\u4e0d\u6253\u7b97\u652f\u6301 (\u7406\u60f3\u5f88\u4e30\u6ee1\u3001\u73b0\u5b9e\u5f88\u9aa8\u611f)","text":"<ul> <li>\u533f\u540d VMA \u547d\u540d\uff0c\u4f7f\u7528<code>prctl(2)</code>(<code>CONFIG_ANON_VMA_NAME</code>)\u8bbe\u7f6e VMA \u540d\u5b57\uff0c\u6211\u5c1d\u8bd5\u63d0\u4ea4\u4e86\u8865\u4e01\uff0c\u4f46\u662f**David Hildenbrand**\u4e0d\u559c\u6b22\uff0c\u53c2\u89c1 LKML Link\u3002</li> </ul>"},{"location":"zh/code-style/","title":"\u4ee3\u7801\u98ce\u683c","text":""},{"location":"zh/code-style/#_1","title":"\u4ee3\u7801\u98ce\u683c","text":"<p>\u8bf7\u53c2\u8003 Linux kernel coding style \u6765\u64b0\u5199 C \u4ee3\u7801\u3002\u53ef\u80fd Linux \u5185\u6838\u6587\u6863\u7684\u4e0d\u540c\u7248\u672c\u6587\u6863\u6709\u7a0d\u8bb8\u5dee\u5f02\uff0c\u6bd4\u5982 Linux 4.19\uff0c\u4f46\u662f\u5dee\u522b\u4e0d\u4f1a\u5f88\u5927</p> <p>\u4f60\u53ef\u4ee5\u4f7f\u7528 <code>indent</code> \u6765\u4fee\u6539\u4f60\u7684\u4ee3\u7801\uff1a</p> <pre><code># \u8f93\u51fa\u5230stdout\n$ indent --linux-style -st main.c\n# \u6216\u8005\u76f4\u63a5\u8986\u76d6main.c\n$ indent --linux-style main.c\n</code></pre>"},{"location":"zh/code-style/#vim","title":"VIM \u914d\u7f6e","text":"<p>vim \u7684\u57fa\u7840\u914d\u7f6e <code>.vimrc</code> \u6587\u4ef6\u9700\u8981\u5305\u542b\u5982\u4e0b\u5185\u5bb9\uff1a</p> <pre><code>set tabstop=8\nset softtabstop=8\nset shiftwidth=8\nset cc=80\n</code></pre>"},{"location":"zh/code-style/#_2","title":"\u4ee3\u7801\u6587\u4ef6\u683c\u5f0f","text":"<p>ULPatch \u4f7f\u7528 Unix format \u800c\u4e0d\u662f DOS or Mac format\u3002</p> <p>\u6b63\u5982\u4f60\u53ef\u4ee5\u901a\u8fc7 <code>dos2unix(1)</code> \u624b\u518c\u770b\u5230\u7684\uff1a</p> <p>In DOS/Windows text files a line break, also known as newline, is a combination of two characters: a Carriage Return (CR) followed by a Line Feed (LF). In Unix text files a line break is a single character: the Line Feed (LF). In Mac text files, prior to Mac OS X, a line break was single Carriage Return (CR) character. Nowadays Mac OS uses Unix style (LF) line breaks.</p> <p>\u5982\u679c\u4f60\u7684\u6587\u4ef6\u662f DOS or Mac format\uff0c\u4f60\u53ef\u80fd\u7ecf\u5e38\u5728 UNIX \u4e0b\u770b\u5230\u6e90\u4ee3\u7801\u884c\u5c3e\u5b58\u5728<code>^M</code>\u3002</p>"},{"location":"zh/code-style/#_3","title":"\u7f16\u7a0b\u6807\u51c6","text":"<ul> <li>\u4e0d\u8981\u4f7f\u7528 <code>%s</code>+<code>strerror(errno)</code> \u7684\u65b9\u5f0f\u6253\u5370\u9519\u8bef\u4fe1\u606f\uff0c\u800c\u662f\u4f7f\u7528<code>%m</code>\u3002</li> <li>\u8bb0\u4f4f\uff0c\u5728\u5fc5\u8981\u7684\u65f6\u5019\uff0c\u5728\u51fd\u6570\u4e2d\u8bbe\u7f6e<code>errno</code>\u3002</li> </ul>"},{"location":"zh/code-style/#_4","title":"\u6587\u6863\u6807\u51c6","text":"<ul> <li>\u540c\u65f6\u4fee\u6539\u4e2d\u6587\u548c\u82f1\u6587\u6587\u6863\uff1b</li> <li>\u4e2d\u6587\u6587\u6863\u4e2d\u7684\u82f1\u6587\u5355\u8bcd\uff0c\u9700\u8981\u4e0e\u4e2d\u6587\u4e4b\u95f4\u7528**\u7a7a\u683c**\u5206\u9694\uff1b</li> </ul>"},{"location":"zh/data-structure/","title":"\u6570\u636e\u7ed3\u6784","text":""},{"location":"zh/data-structure/#_1","title":"\u57fa\u7840\u6570\u636e\u7ed3\u6784","text":""},{"location":"zh/data-structure/#_2","title":"\u53cc\u5411\u94fe\u8868","text":"<p>\u53c2\u89c1 https://github.com/torvalds/linux::list.h.</p>"},{"location":"zh/data-structure/#_3","title":"\u7ea2\u9ed1\u6811","text":"<p>\u53c2\u89c1 https://github.com/torvalds/linux::rbtree.h.</p>"},{"location":"zh/data-structure/#ulpatch","title":"ULPatch \u6570\u636e\u7ed3\u6784","text":""},{"location":"zh/data-structure/#vma","title":"\u8fdb\u7a0b\u7684VMA","text":"<p>TODO</p>"},{"location":"zh/developers/","title":"\u5f00\u53d1\u8005","text":""},{"location":"zh/developers/#ulpatch","title":"ULPatch \u5f00\u53d1\u6307\u5357","text":"<p>\u672c\u6587\u6863\u4ecb\u7ecd ULPatch \u7684\u5f00\u53d1\u6307\u5357\u3002\u8bf7\u5728\u63d0\u4ea4\u8865\u4e01\u524d\u9605\u8bfb\u3002</p>"},{"location":"zh/developers/#_1","title":"\u80cc\u666f","text":"<p>\u5728\u6211\u770b\u6765\uff0c\u5982\u679c\u4f60\u60f3\u8981\u5f00\u53d1 ULPatch\uff0c\u9700\u8981\u6709\u4e9b\u9884\u5907\u77e5\u8bc6\uff1a</p> <ul> <li>Linux \u57fa\u7840\uff1b</li> <li>ELF \u683c\u5f0f\uff1b</li> <li>ELF \u91cd\u5b9a\u5411\uff1b</li> <li>Linux \u5185\u6838\u5982\u4f55\u52a0\u8f7d ELF \u5e76\u8fd0\u884c\u7684\uff1b</li> <li>GNU linker \u662f\u5982\u4f55\u5de5\u4f5c\u7684\uff1b</li> </ul>"},{"location":"zh/developers/#_2","title":"\u9884\u9632\u63aa\u65bd","text":"<p>\u4f60\u53ef\u4ee5\u67e5\u770b ULPatch \u7684 \u672a\u5b8c\u6210\u5de5\u4f5c\u5217\u8868\uff0c\u5e76\u4e14\u4f60\u9700\u8981\u9075\u5b88 \u4ee3\u7801\u98ce\u683c \u548c Contributing \u89c4\u5219\u3002</p>"},{"location":"zh/developers/#cmake-macros","title":"CMake \u7f16\u8bd1\u5b8f Macros","text":"<p>\u53c2\u89c1 ULPatch\u5b89\u88c5\u6587\u6863.</p>"},{"location":"zh/developers/#c","title":"C \u5b8f","text":""},{"location":"zh/developers/#current","title":"current","text":"<p>\u50cf\u5185\u6838\u7684 <code>current</code>\uff0c<code>current</code> \u8868\u793a\u5f53\u524d\u88ab\u6253\u5f00\u7684\u8fdc\u7aef\u8fdb\u7a0b\u3002</p>"},{"location":"zh/developers/#c_1","title":"C \u51fd\u6570","text":"<p>ULpatch \u51fd\u6570\u4f1a\u5728\u5931\u8d25\u7684\u60c5\u51b5\u4e0b\u8bbe\u7f6e <code>errno</code>\u3002</p>"},{"location":"zh/developers/#github-ci","title":"GitHub CI","text":"<p>\u53c2\u89c1 ulpatch/.github\u3002</p>"},{"location":"zh/elf/","title":"ELF\u6587\u4ef6","text":""},{"location":"zh/elf/#elf-executable-and-linkable-format","title":"ELF: Executable and Linkable Format","text":"<p>ELF \u662f\u53ef\u6267\u884c\u6587\u4ef6\u3001\u76ee\u6807\u4ee3\u7801\u3001\u5171\u4eab\u5e93\u548c\u6838\u5fc3\u8f6c\u50a8\u7684\u901a\u7528\u6807\u51c6\u6587\u4ef6\u683c\u5f0f\u3002\u5b83\u9996\u5148\u53d1\u5e03\u5728\u540d\u4e3a System V Release 4 \uff08SVR4\uff09 \u7684 Unix \u64cd\u4f5c\u7cfb\u7edf\u7248\u672c\u7684\u5e94\u7528\u7a0b\u5e8f\u4e8c\u8fdb\u5236\u63a5\u53e3 \uff08ABI\uff09 \u89c4\u8303\u4e2d\uff0c\u540e\u6765\u53c8\u5728 \u5de5\u5177\u63a5\u53e3\u6807\u51c6 \u4e2d\u53d1\u5e03\uff0c\u5f88\u5feb\u5c31\u88ab Unix \u7cfb\u7edf\u7684\u4e0d\u540c\u4f9b\u5e94\u5546\u6240\u63a5\u53d7\u30021999 \u5e74\uff0c\u5b83\u88ab 86open \u9879\u76ee\u9009\u4e3a x86 \u5904\u7406\u5668\u4e0a Unix \u548c\u7c7b Unix \u7cfb\u7edf\u7684\u6807\u51c6\u4e8c\u8fdb\u5236\u6587\u4ef6\u683c\u5f0f\u3002</p> <p>\u6839\u636e\u8bbe\u8ba1\uff0cELF \u683c\u5f0f \u662f\u7075\u6d3b\u7684\u3001\u53ef\u6269\u5c55\u7684\u548c\u8de8\u5e73\u53f0\u7684\u3002\u4f8b\u5982\uff0c\u5b83\u652f\u6301\u4e0d\u540c\u7684\u5b57\u8282\u5e8f\u548c\u5730\u5740\u5927\u5c0f\uff0c\u56e0\u6b64\u4e0d\u6392\u9664\u4efb\u4f55\u7279\u5b9a\u7684 CPU \u6216\u6307\u4ee4\u96c6\u67b6\u6784\u3002\u8fd9\u4f7f\u5f97\u5b83\u80fd\u591f\u88ab\u8bb8\u591a\u4e0d\u540c\u786c\u4ef6\u5e73\u53f0\u4e0a\u7684\u8bb8\u591a\u4e0d\u540c\u64cd\u4f5c\u7cfb\u7edf\u91c7\u7528\u3002</p> <p></p>"},{"location":"zh/elf/#ulpatch-elf","title":"ULPatch ELF \u683c\u5f0f","text":"<p>TODO</p>"},{"location":"zh/log/","title":"\u65e5\u5fd7","text":""},{"location":"zh/log/#_1","title":"\u65e5\u5fd7\u7ea7\u522b","text":"<p>\u53c2\u89c1 <code>syslog(2)</code> \u624b\u518c\u6216\u8005\u5934\u6587\u4ef6 <code>/usr/include/sys/syslog.h</code>\u3002</p>"},{"location":"zh/log/#syslog","title":"Syslog","text":"<p>\u65e5\u5fd7\u5c06\u88ab\u8bb0\u5f55\u5728\u7cfb\u7edf\u65e5\u5fd7\u4e2d\u3002\u5982\u679c\u4f60\u7684\u7cfb\u7edf\u4f7f\u7528 <code>systemd</code> \u4f5c\u4e3a\u670d\u52a1\u7ba1\u7406\u5668\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528 <code>journalctl</code> \u67e5\u770b\u65e5\u5fd7\u3002</p>"},{"location":"zh/log/#ulpatch","title":"ULPatch","text":"<p>\u6bcf\u4e2a ULPatch \u547d\u4ee4\u90fd\u5305\u542b\u53c2\u6570 <code>--log-level[=LEVEL], --lv[=LEVEL]</code>, <code>--log-debug</code> \u548c <code>--log-error</code> \u53c2\u6570\u6765\u914d\u7f6e\u65e5\u5fd7\u7ea7\u522b\u3002\u65e5\u5fd7\u7ea7\u522b\u9075\u5faa<code>/usr/include/sys/syslog.h</code>\u679a\u4e3e\u503c\u3002\u4f60\u53ef\u4ee5\u4f7f\u7528<code>-v, --verbose</code> \u53c2\u6570\u67e5\u770b\u66f4\u591a\u4fe1\u606f\u3002</p>"},{"location":"zh/relocations/","title":"\u91cd\u5b9a\u5411","text":""},{"location":"zh/relocations/#elf","title":"ELF \u91cd\u5b9a\u4f4d","text":"<p>\u91cd\u5b9a\u4f4d\u662f\u5c06\u7b26\u53f7\u5f15\u7528\u4e0e\u7b26\u53f7\u5b9a\u4e49\u8fde\u63a5\u8d77\u6765\u7684\u8fc7\u7a0b\u3002\u4f8b\u5982\uff0c\u5f53\u7a0b\u5e8f\u8c03\u7528\u51fd\u6570\u65f6\uff0c\u5173\u8054\u7684\u8c03\u7528\u6307\u4ee4\u5fc5\u987b\u5728\u6267\u884c\u65f6\u5c06\u63a7\u5236\u6743\u8f6c\u79fb\u5230\u6b63\u786e\u7684\u76ee\u6807\u5730\u5740\u3002</p> <p>\u53ef\u91cd\u5b9a\u4f4d\u6587\u4ef6\u5fc5\u987b\u5177\u6709\u5fc5\u8981\u7684**\u91cd\u5b9a\u4f4d\u6761\u76ee**\uff0c\u56e0\u4e3a\u5b83\u4eec\u5305\u542b\u63cf\u8ff0\u5982\u4f55\u4fee\u6539\u5176\u8282\u5185\u5bb9\u7684\u4fe1\u606f\uff0c\u4ece\u800c\u5141\u8bb8\u53ef\u6267\u884c\u548c\u5171\u4eab\u76ee\u6807\u6587\u4ef6\u4fdd\u5b58\u8fdb\u7a0b\u7a0b\u5e8f\u6620\u50cf\u7684\u6b63\u786e\u4fe1\u606f\u3002</p> <pre><code>typedef struct {\n    Elf32_Addr  r_offset;\n    Elf32_Word  r_info;\n} Elf32_Rel;\n\ntypedef struct {\n    Elf32_Addr  r_offset;\n    Elf32_Word  r_info;\n    Elf32_Sword r_addend;\n} Elf32_Rela;\n\ntypedef struct {\n    Elf64_Addr  r_offset;\n    Elf64_Xword r_info;\n} Elf64_Rel;\n\ntypedef struct {\n    Elf64_Addr  r_offset;\n    Elf64_Xword r_info;\n    Elf64_Sxword    r_addend;\n} Elf64_Rela;\n</code></pre>"},{"location":"zh/relocations/#_1","title":"\u52a8\u6001\u91cd\u5b9a\u4f4d","text":"<p>TODO</p>"},{"location":"zh/relocations/#_2","title":"\u8fd0\u884c\u8fdb\u7a0b\u91cd\u5b9a\u4f4d","text":"<p>TODO</p>"},{"location":"zh/relocations/#pie","title":"PIE \u91cd\u5b9a\u4f4d","text":"<p>PIE: Position-Independent-Executable</p> <p>TODO</p>"},{"location":"zh/relocations/#_3","title":"\u94fe\u63a5","text":"<ul> <li>GitHub: Application Binary Interface for the Arm\u00ae Architecture<ul> <li>aarch64 ELF64</li> </ul> </li> <li>https://refspecs.linuxbase.org/: Relocation</li> <li>Relocations: fantastic symbols, but where to find them?</li> <li>PDF: ELF for the ARM\u00ae 64-bit Architecture (AArch64)</li> <li>wikipedia: https://en.wikipedia.org/wiki/Relocation_(computing)</li> </ul>"},{"location":"zh/symbol-value/","title":"\u7b26\u53f7\u5730\u5740","text":""},{"location":"zh/symbol-value/#_1","title":"\u7f29\u7565\u8bcd","text":"<ul> <li>PIE: Position-Independent-Executable</li> </ul>"},{"location":"zh/symbol-value/#_2","title":"\u4ecb\u7ecd","text":"<p>\u5982\u4f55\u89e3\u6790 symbol \u5730\u5740\uff1f</p> <p>GDB \u7684\u7b26\u53f7\u89e3\u6790\u5b9e\u73b0 binutils-gdb \u5f88\u6709\u5e2e\u52a9\uff0c\u6211\u4eec\u5e94\u8be5\u4f7f\u7528 <code>BFD</code> \u6765\u89e3\u6790\u7b26\u53f7\u548c\u91cd\u5b9a\u4f4d\u3002</p>"},{"location":"zh/symbol-value/#linuxelf","title":"Linux\u5185\u6838\u5bf9ELF\u6587\u4ef6\u7684\u5185\u5b58\u6620\u5c04","text":"<p>\u53c2\u89c1\u5185\u6838 <code>load_elf_binary()</code> \u51fd\u6570\uff0c\u5b83\u4f1a\u5c06\u6240\u6709 <code>PT_LOAD</code> \u90e8\u5206\u52a0\u8f7d\u5230\u5185\u5b58\u4e2d\uff0c\u4f4d\u7f6e\u5c31\u662f\u6211\u4eec\u5173\u5fc3\u7684\u3002</p> <pre><code>load_bias = 0\nvaddr = elf_ppnt-&gt;p_vaddr\nif (ET_EXEC)\nelif (ET_DYN)\n    load_bias = Non-Zero Value (random)\n\nelf_map(file, load_bias + vaddr, ...) {\n    size = p_filesz + ELF_PAGEOFFSET(p_vaddr);\n    off = p_offset - ELF_PAGEOFFSET(p_vaddr);\n    addr = load_bias + p_vaddr\n    addr = ELF_PAGESTART(addr);\n    size = ELF_PAGEALIGN(size);\n    vm_mmap(filep, addr, size, ..., off);\n}\n</code></pre>"},{"location":"zh/symbol-value/#vmas","title":"\u8fdb\u7a0b\u7684 VMAs","text":"<p>\u5728 <code>/proc/PID/maps</code> \u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u8fdb\u7a0b\u7684 VMA\uff0c\u5185\u6838\u4f1a\u5c06 <code>PT_LOAD</code> \u52a0\u8f7d\u5230\u5185\u5b58\u4e2d\uff0c\u800c <code>linker</code>\uff08\u4f8b\u5982\u5728 <code>x86_64</code> fedora40 \u4e0a <code>/lib64/ld-linux-x86-64.so.2</code>\uff09\u5c06\u5206\u79bb\u4e00\u4e9b vma\u3002\u4f8b\u5982\uff1a</p> <p>\u975e PIE hello \u7a0b\u5e8f\u7684 <code>PT_LOAD</code></p> <pre><code>Program Headers:\n  Type           Offset             VirtAddr           PhysAddr\n                 FileSiz            MemSiz              Flags  Align\n  LOAD           0x0000000000000000 0x0000000000400000 0x0000000000400000\n                 0x0000000000000650 0x0000000000000650  R      0x1000\n  LOAD           0x0000000000001000 0x0000000000401000 0x0000000000401000\n                 0x0000000000000379 0x0000000000000379  R E    0x1000\n  LOAD           0x0000000000002000 0x0000000000402000 0x0000000000402000\n                 0x00000000000001d4 0x00000000000001d4  R      0x1000\n  LOAD           0x0000000000002df8 0x0000000000403df8 0x0000000000403df8\n                 0x0000000000000248 0x0000000000000260  RW     0x1000\n</code></pre> <p>\u6211\u4eec\u7528 gdb \u542f\u52a8 <code>hello</code>\uff0c\u7136\u540e\u5728\u94fe\u63a5\u5668\u7684 <code>_dl_start()</code> \u4e0a <code>break</code> \u5f00\u59cb\uff1a</p> <pre><code>$ gdb ./hello\n(gdb) b _dl_start\n(gdb) r\nBreakpoint 1, _dl_start (arg=0x7fffffffd830) at rtld.c:517\n517 {\n</code></pre> <p>\u7136\u540e\u67e5\u770bVMA\uff1a</p> <pre><code>$ cat /proc/$(pidof hello)/maps\n00400000-00401000 r--p 00000000 08:10 3115204 /ulpatch/tests/hello/hello\n00401000-00402000 r-xp 00001000 08:10 3115204 /ulpatch/tests/hello/hello\n00402000-00403000 r--p 00002000 08:10 3115204 /ulpatch/tests/hello/hello\n00403000-00405000 rw-p 00002000 08:10 3115204 /ulpatch/tests/hello/hello\n</code></pre> <p>\u7136\u540e\uff0c<code>continue</code>\u7ee7\u7eed\u8fd0\u884c\uff1a</p> <pre><code>(gdb) continue\n</code></pre> <p>\u53d1\u73b0 VMA \u53d1\u751f\u53d8\u5316\uff1a</p> <pre><code>$ cat /proc/$(pidof hello)/maps\n00400000-00401000 r--p 00000000 08:10 3115204 /ulpatch/tests/hello/hello\n00401000-00402000 r-xp 00001000 08:10 3115204 /ulpatch/tests/hello/hello\n00402000-00403000 r--p 00002000 08:10 3115204 /ulpatch/tests/hello/hello\n00403000-00404000 r--p 00002000 08:10 3115204 /ulpatch/tests/hello/hello\n00404000-00405000 rw-p 00003000 08:10 3115204 /ulpatch/tests/hello/hello\n</code></pre> <p>\u4e3a\u4ec0\u4e48\u94fe\u63a5\u5668\u5c06 vma<code>00403000-00405000 rw-p 00002000</code>\u62c6\u5206\u4e3a\u4e24\u4e2a\u4e0d\u540c\u7684 vma<code>00403000-00404000 r--p 00002000</code>\u548c<code>00404000-00405000 rw-p 00003000</code>\uff1f\u8ba9\u6211\u4eec\u770b\u770b glibc \u6e90\u4ee3\u7801\uff08\u6211\u7684\u7248\u672c <code>glibc-2.40.9000-13-g22958014ab</code>\uff09\u4e2d\u94fe\u63a5\u5668\u7684\u8c03\u7528\u5806\u6808\u3002</p> <pre><code>_dl_start() {\n  _dl_start_final() {\n    _dl_sysdep_start() {\n      dl_main(dl_main_args.phdr, dl_main_args.phnum, ...) {\n        _dl_relocate_object() {\n          _dl_protect_relro() {\n            phdr = PT_GNU_RELRO\n            start = PAGE_DOWN(load_bias + phdr-&gt;p_vaddr);\n            end = PAGE_DOWN(load_bias + phdr-&gt;p_vaddr + phdr-&gt;p_memsz);\n            if (start != end) {\n              mprotect(start, end - start, PROT_READ);\n            }\n          }\n        }\n      }\n    }\n  }\n}\n</code></pre> <p>\u8ba9\u6211\u4eec\u770b\u770b PIE \u7a0b\u5e8f\u3002</p> <pre><code>555555554000-555555555000 r--p 00000000 08:10 3115207 /ulpatch/tests/hello/hello-pie\n555555555000-555555556000 r-xp 00001000 08:10 3115207 /ulpatch/tests/hello/hello-pie\n555555556000-555555557000 r--p 00002000 08:10 3115207 /ulpatch/tests/hello/hello-pie\n555555557000-555555559000 rw-p 00002000 08:10 3115207 /ulpatch/tests/hello/hello-pie\n</code></pre> <p>\u8ddf\u8e2a <code>mprotect(2)</code>\uff1a</p> <pre><code>mprotect(0x555555557000, 0x4096, PROT_READ);\n</code></pre> <pre><code>555555554000-555555555000 r--p 00000000 08:10 3115207 /ulpatch/tests/hello/hello-pie\n555555555000-555555556000 r-xp 00001000 08:10 3115207 /ulpatch/tests/hello/hello-pie\n555555556000-555555557000 r--p 00002000 08:10 3115207 /ulpatch/tests/hello/hello-pie\n555555557000-555555558000 r--p 00002000 08:10 3115207 /ulpatch/tests/hello/hello-pie\n555555558000-555555559000 rw-p 00003000 08:10 3115207 /ulpatch/tests/hello/hello-pie\n</code></pre> <p>\u6211\u4eec\u5e94\u8be5\u77e5\u9053\u4e3a\u4ec0\u4e48 linker \u5c06 <code>addr=0x555555557000\uff0clen=0x4096</code> \u5185\u5b58\u4fee\u6539\u4e3a\u53ea\u8bfb\u3002</p> <p>\u6b63\u5982\u6211\u4eec\u5728 <code>readelf -l /bin/bash</code> \u8f93\u51fa\u4e2d\u770b\u5230\u7684\uff0c\u6700\u540e\u4e00\u4e2a <code>PT_LOAD</code> \u7a0b\u5e8f\u5934\u548c <code>PT_GNU_RELRO</code> \u7a0b\u5e8f\u5934\u4e2d\u7684 <code>.data.rel.ro</code> \uff0c\u5185\u6838\u4f1a\u5c06\u6240\u6709 <code>PT_LOAD</code> \u52a0\u8f7d\u5230\u5185\u5b58\u4e2d\uff0c\u7136\u540e\uff0cGNU \u94fe\u63a5\u5668\u5c06\u901a\u8fc7 <code>mprotect(2)</code> \u7cfb\u7edf\u8c03\u7528\u5c06 <code>.data.rel.ro</code> \u8bbe\u7f6e\u4e3a**\u53ea\u8bfb**\u6743\u9650\uff0c\u53c2\u89c1\u4e0a\u9762\u663e\u793a\u7684\u94fe\u63a5\u5668\u4f2a\u4ee3\u7801\u3002\u56e0\u6b64\uff0c\u865a\u62df\u673a <code>555555557000-5555555559000 rw-p 00002000</code> \u5c06\u62c6\u5206\u4e3a\u4e24\u4e2a\u4e0d\u540c\u7684\u865a\u62df\u673a <code>55555557000-5555555558000 r--p 00002000</code> \u548c <code>5555555558000-5555555559000 rw-p 00003000</code>\u3002</p>"},{"location":"zh/ulpatch/","title":"ULPatch\u7528\u6237\u6001\u70ed\u8865\u4e01","text":""},{"location":"zh/ulpatch/#ulpatch","title":"ULPatch \u4ecb\u7ecd","text":"<p>\u4f60\u53ef\u4ee5\u5148\u67e5\u770b \u539f\u7406\u548c **ulpatch(8)**\u624b\u518c\u3002</p>"},{"location":"zh/ulpatch/#_1","title":"\u516c\u5171\u53c2\u6570","text":"<p><code>--pid</code>\u53c2\u6570\u662f\u5fc5\u987b\u6307\u5b9a\u7684\uff0c\u4f20\u5165\u4e00\u4e2a\u5408\u6cd5\u7684\u8fdb\u7a0b**PID**\u3002 \u4f7f\u7528<code>--log-level|--lv=debug,dbg,info,inf,notice,note,warning,warn,error,err,crit,alert,emerg</code>\u8bbe\u7f6e\u65e5\u5fd7\u7ea7\u522b\u3002</p>"},{"location":"zh/ulpatch/#_2","title":"\u5236\u4f5c\u70ed\u8865\u4e01\u6587\u4ef6","text":"<p>TODO</p>"},{"location":"zh/ulpatch/#_3","title":"\u5e94\u7528\u70ed\u8865\u4e01","text":"<p>TODO</p>"},{"location":"zh/ulpatch/#_4","title":"\u5378\u8f7d\u70ed\u8865\u4e01","text":"<p>TODO</p>"},{"location":"zh/ulpatch/#_5","title":"\u70ed\u8865\u4e01\u7ba1\u7406","text":"<p>TODO</p>"},{"location":"zh/ulpatch_test/","title":"ULPatch\u6d4b\u8bd5","text":""},{"location":"zh/ulpatch_test/#ulpatch-test-introduction","title":"ULPatch Test Introduction","text":"<p>\u4f60\u53ef\u4ee5\u5148\u67e5\u770b \u539f\u7406\uff0c<code>ultask_test --help</code> \u4e5f\u5f88\u6709\u5e2e\u52a9\u3002</p> <p>TODO</p>"},{"location":"zh/ulpinfo/","title":"ULPatch\u7528\u6237\u6001\u70ed\u8865\u4e01\u67e5\u770b","text":""},{"location":"zh/ulpinfo/#ulpinfo","title":"ULPInfo \u4ecb\u7ecd","text":"<p>\u4f60\u53ef\u4ee5\u5148\u67e5\u770b \u539f\u7406\u548c **ulpinfo(8)**\u624b\u518c\u3002</p>"},{"location":"zh/ulpinfo/#_1","title":"\u516c\u5171\u53c2\u6570","text":"<p><code>--pid</code>\u662f\u53ef\u9009\u53c2\u6570\uff0c\u5982\u679c\u4f60\u901a\u8fc7<code>--patch</code>\u6307\u5b9a ulp.elf \u6587\u4ef6\uff0culpinfo \u5c06\u73b0\u5b9e ulp.elf \u7684\u57fa\u7840\u4fe1\u606f\u3002 \u4f7f\u7528<code>--log-level|--lv=debug,dbg,info,inf,notice,note,warning,warn,error,err,crit,alert,emerg</code>\u8bbe\u7f6e\u65e5\u5fd7\u7ea7\u522b\u3002</p>"},{"location":"zh/ultask/","title":"ULTask\u8fdb\u7a0b\u4fee\u6539\u5668","text":""},{"location":"zh/ultask/#ultask","title":"ULTask \u4ecb\u7ecd","text":"<p>\u4f60\u53ef\u4ee5\u5148\u67e5\u770b \u539f\u7406\u548c **ultask(8)**\u624b\u518c\u3002</p>"},{"location":"zh/ultask/#_1","title":"\u516c\u5171\u53c2\u6570","text":"<p><code>--pid</code>\u53c2\u6570\u662f\u5fc5\u987b\u6307\u5b9a\u7684\uff0c\u4f20\u5165\u4e00\u4e2a\u5408\u6cd5\u7684\u8fdb\u7a0b**PID**\u3002 \u4f7f\u7528<code>--log-level|--lv=debug,dbg,info,inf,notice,note,warning,warn,error,err,crit,alert,emerg</code>\u8bbe\u7f6e\u65e5\u5fd7\u7ea7\u522b\u3002</p>"},{"location":"zh/ultask/#_2","title":"\u4fe1\u606f","text":"<ul> <li>\u4f7f\u7528<code>--vmas</code>\u663e\u793a\u76ee\u6807\u8fdb\u7a0b\u7684VMA\u4fe1\u606f\u3002</li> <li>\u4f7f\u7528<code>--threads</code>\u663e\u793a\u76ee\u6807\u8fdb\u7a0b\u7684\u7ebf\u7a0b\u4fe1\u606f\u3002</li> <li>\u4f7f\u7528<code>--fds</code>\u663e\u793a\u76ee\u6807\u8fdb\u7a0b\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u4fe1\u606f\u3002</li> <li>\u4f7f\u7528<code>--auxv</code>\u663e\u793a\u76ee\u6807\u8fdb\u7a0b\u7684\u8f85\u52a9\u5411\u91cf\u4fe1\u606f\u3002</li> <li>\u4f7f\u7528<code>--status</code>\u663e\u793a\u76ee\u6807\u8fdb\u7a0b\u7684\u72b6\u6001\u4fe1\u606f\u3002</li> <li>\u4f7f\u7528<code>--syms|--symbols</code>\u663e\u793a\u76ee\u6807\u8fdb\u7a0b\u7684ELF\u7b26\u53f7\u4fe1\u606f\u3002</li> </ul>"},{"location":"zh/ultask/#_3","title":"\u8f6c\u50a8","text":"<p>\u4f7f\u7528<code>--dump</code>\u5bf9\u76ee\u6807\u8fdb\u7a0b\u8fdb\u884c\u8f6c\u50a8\u3002</p>"},{"location":"zh/ultask/#_4","title":"\u8df3\u8f6c","text":"<p>\u4f7f\u7528<code>--jmp</code>\u4fee\u6539\u4ee3\u7801\u6bb5\u8df3\u4ece\u4e00\u4e2a\u5730\u5740\u8df3\u8f6c\u81f3\u53e6\u4e00\u4e2a\u5730\u5740\u6267\u884c\u4ee3\u7801\uff0c\u8fd9\u4e2a\u64cd\u4f5c\u65f6\u5371\u9669\u7684\uff0c\u9664\u975e\u4f60\u77e5\u9053\u4f60\u5728\u505a\u4ec0\u4e48\uff0c\u4e0d\u7136\u6700\u597d\u4e0d\u8981\u8fd9\u4e48\u505a\u3002</p>"},{"location":"zh/ultask/#_5","title":"\u6620\u5c04","text":"<p>\u4f7f\u7528<code>--map</code>\u6620\u5c04\u4e00\u4e2a\u6587\u4ef6\u5230\u76ee\u6807\u8fdb\u7a0b\u3002\u8fd9\u4e2a\u53c2\u6570\u548c<code>--unmap</code>\u662f\u4e00\u5bf9\u3002</p>"},{"location":"zh/ultask/#_6","title":"\u5185\u5b58\u6743\u9650","text":"<p>\u4f7f\u7528<code>--mprotect</code>\u4fee\u6539\u76ee\u6807\u8fdb\u7a0b\u5730\u5740\u7a7a\u95f4\u5185\u5b58\u7684\u6743\u9650\u3002</p>"}]}